{
  "version": 3,
  "sources": ["../../../src/plugins/observe.resize.js"],
  "sourcesContent": ["/**\r\n * This callback is displayed as part of the Requester class.\r\n * @callback resizeObserver~callback\r\n * @param {SVGMatrix} currentMatrix\r\n * @param {SVGMatrix} prevMatrix\r\n */\r\n\r\nconst resizeObserverCache = new WeakMap();\r\n\r\n/**\r\n * resizeObserver - call the callback if the SVG is resized\r\n * @param {resizeObserver~callback} [callback]\r\n * @returns {gSVG}\r\n */\r\nfunction resizeObserver (callback = () => void (0)) {\r\n  const self = this;\r\n  const svg  = this.el.tagName.toLowerCase() === 'svg' ? this.el : this.closest('svg').el;\r\n  if (resizeObserverCache.has(svg)) {\r\n    return resizeObserverCache.get(svg).push(callback);\r\n  }\r\n  resizeObserverCache.set(svg, [callback]);\r\n  let prevMatrix = {};\r\n  const check    = () => {\r\n    const currentMatrix = svg.getScreenCTM();\r\n    if (currentMatrix !== null && (\r\n      currentMatrix.a !== prevMatrix.a ||\r\n      currentMatrix.b !== prevMatrix.b ||\r\n      currentMatrix.c !== prevMatrix.c ||\r\n      currentMatrix.d !== prevMatrix.d ||\r\n      currentMatrix.e !== prevMatrix.e ||\r\n      currentMatrix.f !== prevMatrix.f)\r\n    ) {\r\n      const callbacks = resizeObserverCache.get(svg);\r\n      for (let cb of callbacks) {\r\n        cb.call(self, currentMatrix, prevMatrix);\r\n      }\r\n      const event = new CustomEvent(\"resize\", {detail : {currentMatrix, prevMatrix}});\r\n      self.el.dispatchEvent(event);\r\n      prevMatrix = currentMatrix;\r\n    }\r\n    window.requestAnimationFrame(check);\r\n  };\r\n  check();\r\n  return self;\r\n}\r\n\r\n\r\n/**\r\n * resizeObserver plugins installer\r\n * @usage gySVG.install( resizeObserver )\r\n */\r\nexport function svgPlugin (setup) {\r\n  // Update gySVGObject\r\n  setup.extendInstance({\r\n    resizeObserver\r\n  });\r\n}\r\n"],
  "mappings": "AAOA,IAAMA,EAAsB,IAAI,QAOhC,SAASC,EAAgBC,EAAW,IAAG,GAAa,CAClD,IAAMC,EAAO,KACPC,EAAO,KAAK,GAAG,QAAQ,YAAY,IAAM,MAAQ,KAAK,GAAK,KAAK,QAAQ,KAAK,EAAE,GACrF,GAAIJ,EAAoB,IAAII,CAAG,EAC7B,OAAOJ,EAAoB,IAAII,CAAG,EAAE,KAAKF,CAAQ,EAEnDF,EAAoB,IAAII,EAAK,CAACF,CAAQ,CAAC,EACvC,IAAIG,EAAa,CAAC,EACZC,EAAW,IAAM,CACrB,IAAMC,EAAgBH,EAAI,aAAa,EACvC,GAAIG,IAAkB,OACpBA,EAAc,IAAMF,EAAW,GAC/BE,EAAc,IAAMF,EAAW,GAC/BE,EAAc,IAAMF,EAAW,GAC/BE,EAAc,IAAMF,EAAW,GAC/BE,EAAc,IAAMF,EAAW,GAC/BE,EAAc,IAAMF,EAAW,GAC/B,CACA,IAAMG,EAAYR,EAAoB,IAAII,CAAG,EAC7C,QAASK,KAAMD,EACbC,EAAG,KAAKN,EAAMI,EAAeF,CAAU,EAEzC,IAAMK,EAAQ,IAAI,YAAY,SAAU,CAAC,OAAS,CAAC,cAAAH,EAAe,WAAAF,CAAU,CAAC,CAAC,EAC9EF,EAAK,GAAG,cAAcO,CAAK,EAC3BL,EAAaE,CACf,CACA,OAAO,sBAAsBD,CAAK,CACpC,EACA,OAAAA,EAAM,EACCH,CACT,CAOO,SAASQ,EAAWC,EAAO,CAEhCA,EAAM,eAAe,CACnB,eAAAX,CACF,CAAC,CACH",
  "names": ["resizeObserverCache", "resizeObserver", "callback", "self", "svg", "prevMatrix", "check", "currentMatrix", "callbacks", "cb", "event", "svgPlugin", "setup"]
}

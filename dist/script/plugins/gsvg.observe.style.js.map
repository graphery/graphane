{
  "version": 3,
  "sources": ["../../../src/plugins/observe.style.js"],
  "sourcesContent": ["/**\r\n * This callback is displayed as part of the Requester class.\r\n * @callback cssObserver~callback\r\n * @param {SVGElement|gySVGObject} svg\r\n * @param {object} styleValues\r\n */\r\n\r\n/**\r\n * Observe CSS changes\r\n */\r\nconst TIMEOUT     = 100;\r\nlet requestId     = 0;\r\nlet lastExecution = 0;\r\nlet elements      = new Map();\r\nlet run           = false;\r\n\r\n/**\r\n *\r\n * @param {string|Array<string>} properties - List of CSS property to observe\r\n * @param {Function}             callback   - function called when the CSS is changed\r\n * @returns {gSVG}\r\n */\r\nfunction styleObserver (properties, callback = () => void (0)) {\r\n  const element = this.el;\r\n  if (typeof properties === 'string') {\r\n    properties = [properties];\r\n  }\r\n  let observer;\r\n  if (!elements.has(element)) {\r\n    observer = {computedStyles : getComputedStyle(element), styles : {}, keys : []};\r\n    elements.set(element, observer);\r\n  } else {\r\n    observer = elements.get(element);\r\n  }\r\n  for (let property of properties) {\r\n    if (!observer.styles[property]) {\r\n      observer.styles[property] = {\r\n        lastValue : observer.computedStyles[property],\r\n        callbacks : new Set()\r\n      };\r\n      observer.keys.push(property);\r\n    }\r\n    observer.styles[property].callbacks.add(callback);\r\n  }\r\n  observe();\r\n  return this;\r\n}\r\n\r\n/**\r\n * function for observe CSS with requestAnimationFrame\r\n * @param {number} [timestamp]\r\n */\r\nfunction observe (timestamp) {\r\n  if (!run || (timestamp - lastExecution < TIMEOUT)) {\r\n    run       = true;\r\n    requestId = window.requestAnimationFrame(observe);\r\n    return;\r\n  }\r\n  if (!timestamp) {\r\n    return;\r\n  }\r\n  lastExecution = timestamp;\r\n  let callbacks = null;\r\n  for (let [element, observer] of elements.entries()) {\r\n    for (let styleName of observer.keys) {\r\n      const currentStyle = observer.computedStyles.getPropertyValue(styleName);\r\n      const lastStyle    = observer.styles[styleName].lastValue;\r\n      if (currentStyle !== lastStyle) {\r\n        if (!callbacks) {\r\n          callbacks = new Map();\r\n        }\r\n        for (let callback of observer.styles[styleName].callbacks) {\r\n          if (callbacks.has(callback)) {\r\n            callbacks.get(callback)[styleName] = {\r\n              current : currentStyle,\r\n              last    : lastStyle\r\n            };\r\n          } else {\r\n            callbacks.set(callback, {\r\n              [styleName] : {\r\n                current : currentStyle,\r\n                last    : lastStyle\r\n              }\r\n            });\r\n          }\r\n        }\r\n        observer.styles[styleName].lastValue = currentStyle;\r\n      }\r\n    }\r\n    if (callbacks) {\r\n      for (let [callback, values] of callbacks.entries()) {\r\n        callback.call(element, values);\r\n      }\r\n      callbacks = null;\r\n    }\r\n  }\r\n  requestId = window.requestAnimationFrame(observe);\r\n}\r\n\r\n/**\r\n * styleObserver\r\n * @usage gySVG.extension( styleObserver )\r\n * @type {{styleObserver() : gySVGObject}}\r\n */\r\nexport function svgPlugin (setup) {\r\n  // Update gSVGObject\r\n  setup.extendInstance({\r\n    styleObserver\r\n  });\r\n}"],
  "mappings": "AAWA,IAAIA,EAAgB,EAChBC,EAAgB,EAChBC,EAAgB,IAAI,IACpBC,EAAgB,GAQpB,SAASC,EAAeC,EAAYC,EAAW,IAAG,GAAa,CAC7D,IAAMC,EAAU,KAAK,GACjB,OAAOF,GAAe,WACxBA,EAAa,CAACA,CAAU,GAE1B,IAAIG,EACCN,EAAS,IAAIK,CAAO,EAIvBC,EAAWN,EAAS,IAAIK,CAAO,GAH/BC,EAAW,CAAC,eAAiB,iBAAiBD,CAAO,EAAG,OAAS,CAAC,EAAG,KAAO,CAAC,CAAC,EAC9EL,EAAS,IAAIK,EAASC,CAAQ,GAIhC,QAASC,KAAYJ,EACdG,EAAS,OAAOC,CAAQ,IAC3BD,EAAS,OAAOC,CAAQ,EAAI,CAC1B,UAAYD,EAAS,eAAeC,CAAQ,EAC5C,UAAY,IAAI,GAClB,EACAD,EAAS,KAAK,KAAKC,CAAQ,GAE7BD,EAAS,OAAOC,CAAQ,EAAE,UAAU,IAAIH,CAAQ,EAElD,OAAAI,EAAQ,EACD,IACT,CAMA,SAASA,EAASC,EAAW,CAC3B,GAAI,CAACR,GAAQQ,EAAYV,EAAgB,IAAU,CACjDE,EAAY,GACZH,EAAY,OAAO,sBAAsBU,CAAO,EAChD,MACF,CACA,GAAI,CAACC,EACH,OAEFV,EAAgBU,EAChB,IAAIC,EAAY,KAChB,OAAS,CAACL,EAASC,CAAQ,IAAKN,EAAS,QAAQ,EAAG,CAClD,QAASW,KAAaL,EAAS,KAAM,CACnC,IAAMM,EAAeN,EAAS,eAAe,iBAAiBK,CAAS,EACjEE,EAAeP,EAAS,OAAOK,CAAS,EAAE,UAChD,GAAIC,IAAiBC,EAAW,CACzBH,IACHA,EAAY,IAAI,KAElB,QAASN,KAAYE,EAAS,OAAOK,CAAS,EAAE,UAC1CD,EAAU,IAAIN,CAAQ,EACxBM,EAAU,IAAIN,CAAQ,EAAEO,CAAS,EAAI,CACnC,QAAUC,EACV,KAAUC,CACZ,EAEAH,EAAU,IAAIN,EAAU,CACtB,CAACO,CAAS,EAAI,CACZ,QAAUC,EACV,KAAUC,CACZ,CACF,CAAC,EAGLP,EAAS,OAAOK,CAAS,EAAE,UAAYC,CACzC,CACF,CACA,GAAIF,EAAW,CACb,OAAS,CAACN,EAAUU,CAAM,IAAKJ,EAAU,QAAQ,EAC/CN,EAAS,KAAKC,EAASS,CAAM,EAE/BJ,EAAY,IACd,CACF,CACAZ,EAAY,OAAO,sBAAsBU,CAAO,CAClD,CAOO,SAASO,EAAWC,EAAO,CAEhCA,EAAM,eAAe,CACnB,cAAAd,CACF,CAAC,CACH",
  "names": ["requestId", "lastExecution", "elements", "run", "styleObserver", "properties", "callback", "element", "observer", "property", "observe", "timestamp", "callbacks", "styleName", "currentStyle", "lastStyle", "values", "svgPlugin", "setup"]
}

{
  "version": 3,
  "sources": ["../../../src/plugins/observe.resize.js", "../../../src/plugins/keep.aspect.js"],
  "sourcesContent": ["/**\r\n * This callback is displayed as part of the Requester class.\r\n * @callback resizeObserver~callback\r\n * @param {SVGMatrix} currentMatrix\r\n * @param {SVGMatrix} prevMatrix\r\n */\r\n\r\nconst observerCache = new WeakSet();\r\n\r\n/**\r\n * resizeObserver - call the callback if the SVG is resized\r\n * @param {Object} svg\r\n */\r\nfunction observeResize (svg) {\r\n  if (observerCache.has(svg)) {\r\n    return;\r\n  }\r\n  let prevMatrix = svg.getScreenCTM();\r\n  const check    = () => {\r\n    const currentMatrix = svg.getScreenCTM();\r\n    if (currentMatrix !== null && (\r\n      currentMatrix.a !== prevMatrix.a ||\r\n      currentMatrix.b !== prevMatrix.b ||\r\n      currentMatrix.c !== prevMatrix.c ||\r\n      currentMatrix.d !== prevMatrix.d ||\r\n      currentMatrix.e !== prevMatrix.e ||\r\n      currentMatrix.f !== prevMatrix.f)\r\n    ) {\r\n      svg.dispatchEvent(new CustomEvent(\"resize\", {detail : {currentMatrix, prevMatrix}}));\r\n      prevMatrix = currentMatrix;\r\n    }\r\n    window.requestAnimationFrame(check);\r\n  };\r\n  observerCache.add(svg);\r\n  check();\r\n}\r\n\r\n\r\n/**\r\n * resizeObserver plugins installer\r\n * @usage gySVG.install( resizeObserver )\r\n */\r\nexport function svgPlugin (setup) {\r\n  // Update gySVGObject\r\n  setup.extendInstance((proto) => {\r\n    proto.addEventListener = function(type, listener, options) {\r\n      if (type === 'resize' && this.el.tagName.toLowerCase() === 'svg') {\r\n        observeResize(this.el);\r\n      }\r\n      this.el.addEventListener(type, listener, options);\r\n    }\r\n  });\r\n}\r\n", "import { svgPlugin as observeResize } from './observe.resize.js';\r\n\r\nconst KEEP_ASPECT = Symbol();\r\nconst interpreter = (s) => s?.split(/\\)\\s*/)\r\n                            .filter(x => !!x)\r\n                            .map(x => x.split(/\\s*\\(/))\r\n                            .reduce((o, r) => {\r\n                              o[r.shift()] = r.pop()\r\n                                              .split(/,/)\r\n                                              .map(n => Number.isNaN(Number(n)) ? n : Number(n));\r\n                              return o;\r\n                            }, {}) || {};\r\n\r\n/**\r\n * keepAspect - keep the size and the stroke when the SVG is resized\r\n * @param {string} [option = 'size']\r\n * @returns {gSVG}\r\n */\r\nfunction keepAspect (option = 'size') {\r\n  const svg = this.closest('svg');\r\n  if (!svg) {\r\n    this.top().addEventListener('attach', () => {\r\n      keepAspect.call(this, option);\r\n    });\r\n    return this;\r\n  }\r\n  if (svg._el.getRootNode() === svg._el) {\r\n    svg.addEventListener('attach', () => {\r\n      keepAspect.call(this, option);\r\n    });\r\n    return this;\r\n  }\r\n  if (this[KEEP_ASPECT]) {\r\n    svg.removeEventListener('resize', this[KEEP_ASPECT]);\r\n  }\r\n  if (option === 'stroke') {\r\n    keepStroke(svg, this);\r\n  }\r\n  if (option === 'size') {\r\n    keepSize(svg, this);\r\n  }\r\n  svg.addEventListener('resize', this[KEEP_ASPECT]);\r\n  return this;\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @param {gSVGObject} svg\r\n * @param {gSVGObject} el\r\n */\r\nfunction keepSize (svg, el) {\r\n  const originalCTM = svg.getScreenCTM() || {a : 1, d : 1};\r\n  const tag         = el.tagName().toLowerCase();\r\n  const box         = tag === 'text' ?\r\n    {x : el.x(), y : el.y()} :\r\n    tag === 'circle' ?\r\n      {x : el.cx(), y : el.cy()} :\r\n      el.getBBox();\r\n  const init        = interpreter(el.transform());\r\n  if (!init.scale) {\r\n    init.scale = [1, 1];\r\n  }\r\n  if (!init.translate) {\r\n    init.translate = [0, 0];\r\n  }\r\n  originalCTM.a   = originalCTM.a * init.scale[0];\r\n  originalCTM.d   = originalCTM.d * init.scale[1];\r\n  el[KEEP_ASPECT] = (evt) => {\r\n    const currentCTM = evt.detail.currentMatrix;\r\n    const transform  = el.transform('').transform;\r\n    const scaleX     = (originalCTM.a / currentCTM.a);\r\n    const scaleY     = (originalCTM.d / currentCTM.d);\r\n    const translateX = box.x * (currentCTM.a / originalCTM.a) - box.x;\r\n    const translateY = box.y * (currentCTM.d / originalCTM.d) - box.y;\r\n    Object.keys(init)\r\n          .filter(x => !['scale', 'translate'].includes(x))\r\n          .forEach(x => transform[x](...init[x]))\r\n    if (scaleX !== 1 || scaleY !== 1) {\r\n      transform.scale(scaleX, scaleY);\r\n    }\r\n    if (translateX !== 0 || translateY !== 0) {\r\n      transform.translate(translateX, translateY);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n *\r\n * @param {gSVGObject} svg\r\n * @param {gSVGObject} el\r\n */\r\nfunction keepStroke (svg, el) {\r\n  const originalCTM  = svg.getScreenCTM() || {a : 1, d : 1};\r\n  el.el._strokeWidth = parseFloat(getComputedStyle(el._el).strokeWidth);\r\n  el[KEEP_ASPECT]    = (evt) => {\r\n    const currentCTM = evt.detail.currentMatrix;\r\n    el.style.strokeWidth(el.el._strokeWidth * Math.max(originalCTM.a / currentCTM.a, originalCTM.d / currentCTM.d));\r\n  };\r\n}\r\n\r\nexport function svgPlugin (setup) {\r\n\r\n  // Install dependencies\r\n  setup.install(observeResize);\r\n\r\n  // Update gSVGObject\r\n  setup.extendInstance({\r\n    keepAspect\r\n  });\r\n\r\n  if (setup.extendTemplate) {\r\n    setup.extendTemplate.defineDirective({\r\n      name : 'g-keep-aspect',\r\n      execute (gObject, {expression}) {\r\n        gObject.keepAspect(expression);\r\n      }\r\n    })\r\n  }\r\n\r\n}"],
  "mappings": "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",
  "names": ["observerCache", "observeResize", "svg", "prevMatrix", "check", "currentMatrix", "svgPlugin", "setup", "proto", "type", "listener", "options", "KEEP_ASPECT", "interpreter", "s", "x", "o", "r", "keepAspect", "option", "svg", "keepStroke", "keepSize", "el", "originalCTM", "tag", "box", "init", "evt", "currentCTM", "transform", "scaleX", "scaleY", "translateX", "translateY", "svgPlugin", "setup", "gObject", "expression"]
}

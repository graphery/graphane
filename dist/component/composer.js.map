{
  "version": 3,
  "sources": ["../../src/helpers/types.js", "../../src/helpers/object.observer.js", "../../src/helpers/objects.js", "../../src/core/simple.js", "../../src/helpers/functions.js", "../../src/core/base.js", "../../src/helpers/intersection.js", "../../src/core/intersection.js", "../../src/lib/gsvg.js", "../../src/helpers/function.create.js", "../../src/helpers/identifier.js", "../../src/plugins/animateto.js", "../../src/plugins/template.engine.js", "../../src/helpers/array.operations.js", "../../src/component/composer.js"],
  "sourcesContent": ["export const FUNCTION  = 'function';\r\nexport const UNDEFINED = 'undefined';\r\nexport const OBJECT    = 'object';\r\nexport const STRING    = 'string';\r\nexport const ARRAY     = 'array';\r\nexport const NUMBER    = 'number';\r\nexport const BOOLEAN   = 'boolean';\r\nexport const DATE      = 'date';\r\nexport const SYMBOL    = 'symbol';\r\n\r\nexport const EMPTY_STRING = '';\r\nexport const COMA         = ',';\r\nexport const COLON        = ':';\r\nexport const SEMICOLON    = ';';\r\n\r\nexport const isObject    = (v) => typeof v === OBJECT;\r\nexport const isString    = (v) => typeof v === STRING;\r\nexport const isFunction  = (v) => typeof v === FUNCTION;\r\nexport const isNumber    = (v) => typeof v === NUMBER && !isNaN(v);\r\nexport const isUndefined = (v) => typeof v === UNDEFINED;\r\nexport const isSymbol    = (v) => typeof v === SYMBOL;\r\nexport const isBoolean   = (v) => typeof v === BOOLEAN;\r\nexport const isArray     = (v) => Array.isArray(v);\r\nexport const isDate      = (v) => v instanceof Date && !isNaN(v);\r\nexport const isNull      = (v) => v === null;\r\n\r\n/**\r\n * Convert attribute name to camel property name\r\n * @param {string} name\r\n * @return {string}\r\n */\r\nexport const toCamel = name => name.replace(/-([a-z0-9])/g, (x, y) => y.toUpperCase());\r\n\r\n/**\r\n * Converto property name to hyphen attribute name\r\n * @param {string} name\r\n * @return {string}\r\n */\r\nexport const toHyphen = name => {\r\n  name = name.replace(/([A-Z])/g, '-$1').toLowerCase();\r\n  return name.startsWith('-') ? name.slice(1) : name;\r\n};\r\n\r\n\r\n/**\r\n * Convert an object property to an attribute string\r\n * @param {Object} value\r\n * @return {string|undefined}\r\n */\r\nexport function object2attribute (value) {\r\n  if (isObject(value)) {\r\n    let str = '';\r\n    for (let key of Object.keys(value)) {\r\n      str += `${ str ? '; ' : '' }${ key }: ${ value[key] }`;\r\n    }\r\n    return str;\r\n  } else if (isString(value)) {\r\n    return value;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * Convert an attribute string to an object property\r\n * @param {string} value\r\n * @return {Object|undefined}\r\n */\r\nexport function attribute2object (value) {\r\n  if (isString(value)) {\r\n    try {\r\n      const normalized = value\r\n        .replace(/^\\s*{/, '')\r\n        .replace(/}\\s*$/, '')\r\n        .split(/((?:[^;^,\"']|\"[^\"]*\"|'[^']*')+)/)\r\n        .filter(partial => !['', ';', ','].includes(partial.trim()))\r\n        .map(partial => partial.split(':'))\r\n        .map(partial => `\"${ partial[0].trim() }\":${ str2value(\r\n          partial[1].trim(),\r\n          undefined,\r\n          true\r\n        ) }`)\r\n        .join(',');\r\n      return JSON.parse(`{${ normalized }}`);\r\n    } catch (err) {\r\n      console.error(err);\r\n      return undefined;\r\n    }\r\n  } else if (isObject(value)) {\r\n    return value;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * Convert an attribute string to an array\r\n * @param {string} value\r\n * @return {Object|undefined}\r\n */\r\nexport function attribute2array (value) {\r\n  if (isString(value)) {\r\n    if (value.trim().startsWith('[')) {\r\n      return (value.match(/\\[(.*?)[^\\]]]/g) || []).map(arr => attribute2array(arr.substring(\r\n        1,\r\n        arr.length - 1\r\n      )));\r\n    } else {\r\n      return value.split(/[,;]/).map(str => str2value(str.trim()));\r\n    }\r\n  } else if (isArray(value)) {\r\n    return value;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * Convert an attribute string to an array of objects\r\n * @param {string} value\r\n * @return {Object|undefined}\r\n */\r\nexport function attribute2arrayObject (value) {\r\n  if (isString(value)) {\r\n    if (value.trim().startsWith('[')) {\r\n      return (value.match(/\\[(.*?)[^\\]]]/g) || []).map(arr => attribute2object(arr.substring(\r\n        1,\r\n        arr.length - 1\r\n      )));\r\n    } else {\r\n      return [attribute2object(value)];\r\n    }\r\n  } else if (isArray(Array)) {\r\n    return value;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @param {Object|string} value\r\n * @return {string|undefined}\r\n */\r\nexport function array2attribute (value) {\r\n  if (isArray(value)) {\r\n    let str = JSON.stringify(value);\r\n    return str.substring(1, str.length - 1)\r\n              .replace(/,/g, ', ')\r\n              .replace(/\"/g, '');\r\n  } else if (isString(value)) {\r\n    return value;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * Convert a string into a value number, boolean or string (with \"\" if quote is true)\r\n * @private\r\n * @param {string} str\r\n * @param {string} [type]\r\n * @param {boolean} [quote=false]\r\n * @return {any}\r\n */\r\nexport function str2value (str, type, quote = false) {\r\n  if (!isString(str)) {\r\n    return str;\r\n  }\r\n  str = removeDoubleQuote(str.trim());\r\n  if (type === ARRAY) {\r\n    return attribute2array(str);\r\n  }\r\n  if (type === OBJECT) {\r\n    return attribute2object(str);\r\n  }\r\n  if (isUndefined(type) || type === NUMBER) {\r\n    if (isUndefined(str) || str === '') {\r\n      return undefined;\r\n    }\r\n    let value = +str;\r\n    if (!Number.isNaN(value) || type === NUMBER) {\r\n      return value;\r\n    }\r\n  }\r\n  if (isUndefined(type) || type === BOOLEAN) {\r\n    if (str === 'true') {\r\n      return true;\r\n    } else if (str === 'false') {\r\n      return false;\r\n    }\r\n    if (type === BOOLEAN) {\r\n      if (str === '0') {\r\n        return false;\r\n      }\r\n      return !!str;\r\n    }\r\n  }\r\n  if (type === DATE) {\r\n    try {\r\n      let value = new Date(str);\r\n      if (!Number.isNaN(value.getTime())) {\r\n        return value;\r\n      }\r\n    } catch (e) {\r\n      void (0);\r\n    }\r\n    return undefined;\r\n  }\r\n  if (isUndefined(type) || type === STRING) {\r\n    return quote ? `\"${ str }\"` : str;\r\n  }\r\n}\r\n\r\nfunction removeDoubleQuote (str) {\r\n  if (\r\n    (str[0] === '\\'' && str[str.length - 1] === '\\'') ||\r\n    (str[0] === '\"' && str[str.length - 1] === '\"')\r\n  ) {\r\n    return str.substring(1, str.length - 1);\r\n  }\r\n  return str;\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} str\r\n * @returns {boolean}\r\n */\r\nexport function isLikeObject (str) {\r\n  return /^\\s*{(.|\\s)*}\\s*$/.test(str);\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} str\r\n * @returns {boolean}\r\n */\r\nexport function isLikeArray (str) {\r\n  return /^\\s*\\[(.|\\s)*]\\s*$/.test(str);\r\n}\r\n\r\n\r\nexport function csvStr2obj (str) {\r\n  let keys = [];\r\n  return str\r\n    .split(/(\\r\\n|\\r|\\n)/)\r\n    .map(r => r.trim())\r\n    .filter(r => r)\r\n    .reduce(\r\n      (result, row, idx) => {\r\n        const obj   = {};\r\n        const parts = row\r\n          .split(/((?:[^;^,\"']|\"[^\"]*\"|'[^']*')+)/)\r\n          .filter(partial => ![EMPTY_STRING, SEMICOLON, COMA].includes(partial.trim()));\r\n        if (idx === 0) {\r\n          keys = [...parts.map(x => str2value(x))];\r\n          return result;\r\n        }\r\n        parts.forEach((part, i) => {\r\n          obj[keys[i]] = str2value(part);\r\n        });\r\n        result.push(obj);\r\n        return result;\r\n      },\r\n      []\r\n    );\r\n}\r\n\r\nexport function jsStr2obj (str) {\r\n  const code = `return (${ str });`\r\n  const ret  = (new Function(code))();\r\n  return typeof ret === 'function' ? ret() : ret;\r\n}\r\n\r\nexport function funcStr2obj (str, $) {\r\n  return (new Function('$', `${ str };let ___$$$ret = {};${\r\n    [...str.matchAll(/\\s*function\\s*(\\w+)/gm)]\r\n      .map(x => `if (typeof ${ x[1] } === 'function') ___$$$ret.${ x[1] } = ${ x[1] };`)\r\n      .join('')\r\n  } return ___$$$ret;`))($);\r\n}", "import {\r\n  isObject, isNull, isFunction, isDate, isString\r\n} from './types.js';\r\n\r\n/**\r\n * Observe an object in deep\r\n * @param {Object}  obj        - object to observe\r\n * @param {Function} callback  - function called when any is changed\r\n * @return {Object}\r\n */\r\n\r\nconst cache = new WeakSet();\r\nlet ignore  = false;\r\n\r\n/**\r\n * Observe an object modifications\r\n * @param {Object}   object\r\n * @param {Function} callback\r\n * @returns {Object}\r\n */\r\nexport const objectObserver = (object, callback) => {\r\n  if (!isFunction(callback)) {\r\n    return object;\r\n  }\r\n  return (function observe (obj) {\r\n    if (cache.has(obj)) {\r\n      return obj;\r\n    }\r\n    for (let prop in obj) {\r\n      if (isObject(obj[prop]) && !isNull(obj[prop])) {\r\n        obj[prop] = observe(obj[prop]);\r\n      }\r\n    }\r\n    const result = new Proxy(obj, {\r\n      get (target, prop) {\r\n        let value = Reflect.get(obj, prop);\r\n        if (isFunction(value) &&\r\n            isDate(target) &&\r\n            isString(prop) &&\r\n            prop.substring(0, 3) === 'set' &&\r\n            isFunction(callback)\r\n        ) {\r\n          value = function (...args) {\r\n            const ret = Reflect.get(target, prop).apply(target, args);\r\n            !ignore && callback(object);\r\n            return ret;\r\n          }\r\n        }\r\n        return isDate(target) ? value.bind(target) : value;\r\n      },\r\n      set (target, prop, value) {\r\n        let ret;\r\n        const same = target[prop] === value;\r\n        if (isObject(value) && !isNull(value)) {\r\n          ret = Reflect.set(target, prop, observe(value));\r\n        } else {\r\n          ret = Reflect.set(target, prop, value);\r\n        }\r\n        !ignore && !same && callback(object);\r\n        return ret;\r\n      },\r\n      deleteProperty (target, prop) {\r\n        let ret = Reflect.deleteProperty(target, prop);\r\n        !ignore && callback(object);\r\n        return ret;\r\n      }\r\n    });\r\n    cache.add(result);\r\n    return result;\r\n  })(object);\r\n};\r\n\r\nobjectObserver.stop  = () => ignore = true;\r\nobjectObserver.start = () => ignore = false;\r\n\r\nexport default objectObserver;", "import {\r\n  OBJECT, NUMBER, UNDEFINED,\r\n  isObject, isFunction, isString, isUndefined, isNull\r\n} from './types.js';\r\n\r\nconst NOT_EQUAL = false;                            // Return values\r\nconst EQUAL     = true;\r\n\r\n/**\r\n * Create a new object (empty) with same constructor\r\n * @param {object} obj - object as seed\r\n * @returns {object}   - a new object\r\n */\r\nexport function createOther (obj) {\r\n  if (obj === null) return null;\r\n  if (obj.constructor) {\r\n    return new obj.constructor();\r\n  }\r\n  return {};\r\n}\r\n\r\n/**\r\n * Clone an object (plain object and array)\r\n * @param {object} obj - object to clone\r\n * @returns {object}   - new object\r\n */\r\nexport function clone (obj) {\r\n  if (!isObject(obj)) {\r\n    return obj;\r\n  }\r\n  const copy = obj === null ? null : Object.assign(createOther(obj), obj);\r\n  for (let p in copy) {\r\n    if (isObject(copy[p])) {\r\n      copy [p] = clone(copy[p]);\r\n    }\r\n  }\r\n  return copy;\r\n}\r\n\r\n/**\r\n * Object comparison (equivalent with same all enumerable properties and equal constructor)\r\n * @param {*} objectA - first object to comparison\r\n * @param {*} objectB - second object to comparison\r\n * @returns {boolean}\r\n */\r\nexport function equal (objectA, objectB) {\r\n  const aStack = [],                             // Stack array\r\n        bStack = [];\r\n\r\n  /**\r\n   * Compare objects\r\n   * @param {object} a - first object\r\n   * @param {object} b - second object\r\n   * @returns {boolean}\r\n   */\r\n  function checkObject (a, b) {\r\n    if (a === null || b === null) {              // if one is null, they are different\r\n      return NOT_EQUAL;\r\n    }\r\n\r\n    if (\r\n      isFunction(a.valueOf) &&         // valueOf() is a function in both values\r\n      isFunction(b.valueOf) &&\r\n      (a !== a.valueOf() || b !== b.valueOf())\r\n    ) {\r\n      return (\r\n        a.valueOf() === b.valueOf() &&\r\n        a.constructor === b.constructor);        // Check if equal\r\n    }\r\n\r\n    if (aStack.indexOf(a) > -1 &&               // Check if the object has been previously processed\r\n        bStack.indexOf(b) > -1) {\r\n      return EQUAL;\r\n    }\r\n    let aKeys = Object.keys(a);                 // Get property keys\r\n    let bKeys = Object.keys(b);\r\n    if (aKeys.length !== bKeys.length) {         // Check the number of properties\r\n      return NOT_EQUAL;\r\n    }\r\n    if (aKeys.length > 0) {\r\n      aStack.push(a);                           // Storage objects into stacks for recursive references\r\n      bStack.push(b);\r\n      let i = aKeys.length;\r\n      while (i--) {                              // Check each property value (recursive call)\r\n        const key = aKeys[i];\r\n        if (!check(a[key], b[key])) {\r\n          return NOT_EQUAL;\r\n        }\r\n      }\r\n    }\r\n    return EQUAL;\r\n  }\r\n\r\n  /**\r\n   * Compare elements\r\n   * @param {*} a - first element\r\n   * @param {*} b - second element\r\n   * @returns {boolean}\r\n   */\r\n  function check (a, b) {\r\n    if (a === b) {                               // Strict comparison\r\n      return EQUAL;\r\n    }\r\n    const aType = typeof a,                      // Get value types\r\n          bType = typeof b;\r\n    if (aType !== bType) {                       // Different type is a not equal value from this point\r\n      return NOT_EQUAL;\r\n    }\r\n    if (aType === NUMBER &&                    // Special case: Not is a Number (NaN !== NaN)\r\n        isNaN(a) &&\r\n        isNaN(b)) {\r\n      return EQUAL;\r\n    }\r\n\r\n    if (aType === OBJECT) {                    // Objects\r\n      return checkObject(a, b);\r\n    }\r\n    return NOT_EQUAL;                            // Not equal\r\n  }\r\n\r\n  return check(objectA, objectB);\r\n}\r\n\r\n/**\r\n * get a deep property\r\n * @param {object} obj\r\n * @param {string|array|Symbol} path\r\n * @returns {undefined|*}\r\n */\r\nexport function getProperty (obj, path) {\r\n  let tmp      = obj;\r\n  let elements = isString(path) ? path.split('.') : path;\r\n  for (let i = 0; i < elements.length; i++) {\r\n    if (isUndefined(tmp[elements[i]])) {\r\n      return undefined;\r\n    }\r\n    tmp = tmp[elements[i]];\r\n  }\r\n  return tmp;\r\n}\r\n\r\n/**\r\n * Create a Schema object\r\n * @param {object} schema\r\n * @returns {{normalize(object): void}}\r\n * @constructor\r\n */\r\nexport function Schema (schema) {\r\n  walker(schema, (obj, key) => {\r\n    if (!obj.$schema && (key === 'properties' || key === 'items')) {\r\n      obj.$schema = {};\r\n      obj.$schema = Schema(obj);\r\n    }\r\n  });\r\n  const arrayNormalization  = (obj) => { // Array\r\n    if (!Array.isArray(obj)) {\r\n      obj = [];\r\n    }\r\n    for (let key in obj) {\r\n      // Update type\r\n      const type = getType(obj[key]);\r\n      if (type !== schema.items.type.name) {\r\n        obj[key] = new schema.items.type(obj[key]).valueOf();\r\n      }\r\n      // Sub schema\r\n      if (schema.items.$schema) {\r\n        obj[key] = schema.items.$schema.normalize(obj[key]);\r\n      }\r\n    }\r\n    return obj;\r\n  };\r\n  const objectNormalization = (obj) => { // Object\r\n    if (!isObject(obj)) {\r\n      obj = {};\r\n    }\r\n    const {properties} = schema;\r\n    for (let key in obj) {\r\n      const property = properties[key];\r\n      // Remove unknown values\r\n      if (!property) {\r\n        delete obj[key];\r\n        continue;\r\n      }\r\n      // Update type\r\n      if (getType(obj[key]) !== property.type.name) {\r\n        obj[key] = new property.type(obj[key]).valueOf();\r\n        if (getType(obj[key]) !== property.type.name || (property.type === Number && Number.isNaN(obj[key]))) {\r\n          delete obj[key];\r\n        }\r\n      }\r\n      // Sub schema\r\n      if (property.$schema) {\r\n        obj[key] = property.$schema.normalize(obj[key]);\r\n      }\r\n    }\r\n    // Add missing values\r\n    for (let key in properties) {\r\n      const property = properties[key];\r\n      if (isUndefined(obj[key]) && !isUndefined(property.default)) {\r\n        obj[key] = new property.type(property.default).valueOf();\r\n      }\r\n      if (property.$schema) {\r\n        obj[key] = property.$schema.normalize(obj[key]);\r\n      }\r\n    }\r\n    return obj;\r\n  };\r\n  return {normalize : schema.items ? arrayNormalization : objectNormalization}\r\n}\r\n\r\n/**\r\n * @typedef walkerCallback\r\n * @type function\r\n * @param {object} obj\r\n * @param {string} key\r\n * @param {*} value\r\n * @param {object} root\r\n * @param {array<string>} keys\r\n */\r\n\r\n/**\r\n * Walk a object keys\r\n * @param {object} obj\r\n * @param {walkerCallback} callback\r\n */\r\nexport function walker (obj, callback) {\r\n  if (!isObject(obj) || !isFunction(callback)) {\r\n    return;\r\n  }\r\n  (function inspect (currentObj, keys) {\r\n    for (let key in currentObj) {\r\n      keys.push(key);\r\n      if (isObject(currentObj[key])) {\r\n        inspect(currentObj[key], keys);\r\n      }\r\n      callback(currentObj, key, currentObj[key], obj, keys);\r\n      keys.pop();\r\n    }\r\n  })(obj, []);\r\n}\r\n\r\nfunction getType (value) {\r\n  if (isNull(value)) {\r\n    return 'null';\r\n  }\r\n  if (isUndefined(value)) {\r\n    return UNDEFINED;\r\n  }\r\n  return value.constructor.name\r\n}", "/**\r\n *\r\n * Simple class for Graphane web component\r\n *\r\n * @module simple\r\n * @version 0.0.2\r\n * @author Pablo Almunia\r\n *\r\n */\r\nimport {\r\n  str2value, toCamel, isUndefined, isFunction, isObject, isString, isNull,\r\n  NUMBER, BOOLEAN, OBJECT, ARRAY, EMPTY_STRING,\r\n}                     from '../helpers/types.js';\r\nimport objectObserver from '../helpers/object.observer.js';\r\nimport {\r\n  equal, clone\r\n}                     from '../helpers/objects.js';\r\n\r\n// Constants\r\nconst COMPONENT_PREFIX = globalThis.GRAPHANE_PREFIX || 'g-';\r\n\r\n// private symbols\r\n/**\r\n * Symbol used for defines a private context used with `this [ CONTEXT ]`.\r\n * @type {symbol}\r\n */\r\nconst INITIALIZERS = Symbol();\r\n\r\n// Public symbols\r\n/**\r\n * Symbol used for defines a private context used with `this [ CONTEXT ]`.\r\n * @type {symbol}\r\n */\r\nconst CONTEXT    = Symbol();\r\n/**\r\n * Symbol used for defines the LOCAL DOM CHANGE event handler into the class\r\n * inherited from Simple. This method is called when the Local Dom component is\r\n * changed, includes its attributes.\r\n * @type {symbol}\r\n */\r\nconst CHANGE     = Symbol();\r\n/**\r\n * Symbol used as method name for fire an event.\r\n * @type {symbol}\r\n */\r\nconst FIRE_EVENT = Symbol();\r\n/**\r\n * Shortcut to Object.defineProperty\r\n * @type {(o: object, p: PropertyKey, attributes: (PropertyDescriptor))}\r\n */\r\nconst defProp    = Object.defineProperty;\r\n\r\n/**\r\n * Update an attribute into the HTML\r\n * @param {HTMLElement} element\r\n * @param {string} attribute\r\n * @param {any} value\r\n * @param {boolean} [asBoolean=false]\r\n * @returns {undefined}\r\n */\r\nfunction updateAttribute (element, attribute, value, asBoolean = false) {\r\n  if (element.ready === false || !attribute) {\r\n    return;\r\n  }\r\n  if (asBoolean) {\r\n    if (value) {\r\n      element.setAttribute(attribute, EMPTY_STRING);\r\n    } else {\r\n      element.removeAttribute(attribute);\r\n    }\r\n  } else {\r\n    const valueNormalized = isNull(value) || isUndefined(value) ? EMPTY_STRING : value.toString();\r\n    if (element.hasAttribute(attribute) && element.getAttribute(attribute) !== valueNormalized) {\r\n      element.setAttribute(attribute, valueNormalized);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Initialize context values\r\n */\r\nfunction initValues (target) {\r\n  this[CONTEXT] = {};\r\n  let proto     = target;\r\n  do {\r\n    const init = initialValues.get(proto);\r\n    for (let p in init) {\r\n      // See: https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\r\n      if (init.hasOwnProperty(p) && this.hasOwnProperty(p)) {\r\n        const tmp = this[p];\r\n        delete this[p];\r\n        this[p] = isUndefined(tmp) ? clone(init[p]) : tmp;\r\n      } else if (!(p in this[CONTEXT])) {\r\n        this[CONTEXT][p] = clone(init[p]);\r\n      }\r\n    }\r\n    proto = Object.getPrototypeOf(proto);\r\n  } while (proto !== HTMLElement);\r\n}\r\n\r\n/**\r\n * Active the mutation observer\r\n */\r\nfunction observeMutation () {\r\n  new MutationObserver((mutations) => {\r\n    for (let mutation of mutations) {\r\n      if (!mutation.attributeName) {\r\n        this[FIRE_EVENT]('update');\r\n        break;\r\n      }\r\n    }\r\n    if (\r\n      (isUndefined(this.ready) || this.ready) &&\r\n      isFunction(this[CHANGE])\r\n    ) {\r\n      this[CHANGE](mutations);\r\n    }\r\n  }).observe(this, {attributes : true, childList : true, subtree : true, characterData : true});\r\n}\r\n\r\n\r\n// Global initial values\r\nconst initialValues = new WeakMap();\r\n\r\n/**\r\n * Simple class for Graphane Web Component\r\n *\r\n * @fires 'update'  - This event fires when the component is changed\r\n */\r\nclass Simple extends HTMLElement {\r\n\r\n  constructor () {\r\n    super();\r\n    initValues.call(this, new.target);\r\n    new.target[INITIALIZERS]?.forEach(fn => isFunction(fn) && fn.call(this, this));\r\n    if (isFunction(this[CHANGE])) {\r\n      observeMutation.call(this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fire an event\r\n   * @private\r\n   * @param {string} event             - event name\r\n   * @param {Object} [detail={}]       - optional event detail object\r\n   * @param {boolean} [composed=false] - optional event propagate across the shadow DOM boundary\r\n   * @returns {boolean}                - return true\r\n   */\r\n  [FIRE_EVENT] (event, detail = {}, composed = false) {\r\n    return this.dispatchEvent(new CustomEvent(\r\n      event,\r\n      {bubbles : true, cancelable : true, detail, composed}\r\n    ));\r\n  }\r\n\r\n}\r\n\r\n/**\r\n *\r\n * Attribute descriptor used into defineAttribute\r\n *\r\n * @typedef {Object} attributeDescriptor\r\n * @property {string} name                          - Attribute name.\r\n * @property {string} [propertyName]                - Property name associated with this attribute.\r\n *                                                    If it's omitted a default name is generated\r\n *                                                    with a camel case structure.\r\n * @property {string} [type]                        - Specific type (boolean, number, string,\r\n *                                                    object, array).\r\n * @property {*} [value]                            - Default value.\r\n * @property {Function} [get]                       - Get accessor method.\r\n * @property {Function} [set]                       - Set accessor method.\r\n * @property {(Function|string|symbol)} [preUpdate] - Callback or method reference to be called\r\n *                                                    previously to update.\r\n * @property {(Function|string|symbol)} [posUpdate] - Callback or method reference to be called\r\n *                                                    after update.\r\n * @property {string} [posUpdateEvent]              - Event name fired after the update.\r\n * @property {object} [schema={}]                   - Data Schema\r\n */\r\n\r\n/**\r\n *\r\n * Define an attribute and its property into a class\r\n *\r\n * @param {Class} Class                    - class to extend\r\n * @param {attributeDescriptor} attribute - options into a {@link attributeDescriptor}\r\n */\r\nfunction defineAttribute (Class, attribute) {\r\n\r\n  // Property\r\n  if (!attribute.propertyName) {\r\n    attribute.propertyName = toCamel(attribute.name);\r\n  }\r\n  defineProperty(Class, {\r\n    name           : attribute.propertyName,\r\n    value          : attribute.value,\r\n    get            : attribute.get,\r\n    set            : attribute.set,\r\n    attribute      : attribute.name,\r\n    type           : attribute.type,\r\n    preUpdate      : attribute.preUpdate,\r\n    posUpdate      : attribute.posUpdate,\r\n    posUpdateEvent : attribute.posUpdateEvent,\r\n    schema         : attribute.schema\r\n  });\r\n\r\n  // Prototype\r\n  const prototype = Object.getPrototypeOf(Class);\r\n\r\n  // observedAttributes\r\n  const OBSERVE_ATTRIBUTES         = 'observedAttributes';\r\n  const descriptorObsAttr          = Object.getOwnPropertyDescriptor(\r\n    Class,\r\n    OBSERVE_ATTRIBUTES\r\n  );\r\n  // observedAttributes\r\n  const descriptorObsAttrPrototype = Object.getOwnPropertyDescriptor(\r\n    prototype,\r\n    OBSERVE_ATTRIBUTES\r\n  );\r\n  let previousGet                  = descriptorObsAttr ? descriptorObsAttr.get : undefined;\r\n  defProp(\r\n    Class,\r\n    OBSERVE_ATTRIBUTES,\r\n    descriptorObservedAttributes(\r\n      Class,\r\n      attribute,\r\n      prototype,\r\n      previousGet,\r\n      descriptorObsAttr,\r\n      descriptorObsAttrPrototype\r\n    )\r\n  );\r\n\r\n  // attributeChangedCallback\r\n  const ATTRIBUTE_CHANGED_CALLBACK    = 'attributeChangedCallback';\r\n  const descriptorAttrChgCbk          = Object.getOwnPropertyDescriptor(\r\n    Class.prototype,\r\n    ATTRIBUTE_CHANGED_CALLBACK\r\n  );\r\n  const descriptorAttrChgCbkPrototype = Object.getOwnPropertyDescriptor(\r\n    prototype.prototype,\r\n    ATTRIBUTE_CHANGED_CALLBACK\r\n  );\r\n  let previousFunction                = descriptorAttrChgCbk ?\r\n    descriptorAttrChgCbk.value :\r\n    undefined;\r\n  defProp(\r\n    Class.prototype,\r\n    ATTRIBUTE_CHANGED_CALLBACK,\r\n    defineAttributeDescriptor(attribute, previousFunction, descriptorAttrChgCbkPrototype)\r\n  );\r\n\r\n}\r\n\r\n/**\r\n * Return the attribute descriptor\r\n * @param {Object} attribute\r\n * @param {Function} previousFunction\r\n * @param {Object} descriptorAttrChgCbkPrototype\r\n * @returns {Object}\r\n */\r\nfunction defineAttributeDescriptor (attribute, previousFunction, descriptorAttrChgCbkPrototype) {\r\n  return {\r\n    /**\r\n     * @this {Base}\r\n     */\r\n    value : function (name, oldValue, value) {\r\n      if (attribute.name === name) {\r\n        const propertyName = attribute.propertyName;\r\n        if (this[propertyName] !== value) {\r\n          if (attribute.type === BOOLEAN) {\r\n            this[propertyName] = this.hasAttribute(attribute.name);\r\n          } else {\r\n            this[propertyName] = str2value(value, attribute.type);\r\n          }\r\n        }\r\n      } else if (previousFunction) {\r\n        previousFunction.apply(this, arguments);\r\n      }\r\n      if (descriptorAttrChgCbkPrototype?.value) {\r\n        descriptorAttrChgCbkPrototype.value.apply(this, arguments);\r\n      }\r\n    }\r\n    ,\r\n    enumerable   : false,\r\n    writable     : true,\r\n    configurable : true\r\n  };\r\n}\r\n\r\n/**\r\n * Return the observedAttribute descriptor\r\n * @param {Object} Class\r\n * @param {Object} attribute\r\n * @param {Object} prototype\r\n * @param {Function} previousGet\r\n * @param {Object} descriptorObsAttr\r\n * @param {Object} descriptorObsAttrPrototype\r\n * @returns {Object}\r\n */\r\nfunction descriptorObservedAttributes (Class, attribute, prototype, previousGet, descriptorObsAttr, descriptorObsAttrPrototype) {\r\n  const descriptor = {\r\n    enumerable   : false,\r\n    configurable : true\r\n  };\r\n  if (descriptorObsAttr) {\r\n    if (descriptorObsAttrPrototype) {\r\n      descriptor.get = function () {\r\n        return [attribute.name,\r\n                ...previousGet.call(Class),\r\n                ...descriptorObsAttrPrototype.get.call(prototype)];\r\n      };\r\n    } else {\r\n      descriptor.get = function () {\r\n        return [attribute.name, ...previousGet.call(Class)];\r\n      };\r\n    }\r\n  } else {\r\n    descriptor.get = descriptorObsAttrPrototype ?\r\n      function () {\r\n        return [attribute.name, ...descriptorObsAttrPrototype.get.call(prototype)];\r\n      } :\r\n      function () {\r\n        return [attribute.name];\r\n      };\r\n  }\r\n\r\n  return descriptor;\r\n}\r\n\r\n/**\r\n *\r\n * Property descriptor used into defineProperty\r\n *\r\n * @typedef {Object} propertyDescriptor\r\n * @property {string}                   name              - Property name\r\n * @property {*}                        [value]           - Default value\r\n * @property {string}                   [attribute]       - Associated attribute name\r\n * @property {string}                   [type]            - Specific type (boolean, number, string,\r\n *                                                          function, object, array).\r\n * @property {(Function|string|symbol)} [preUpdate]       - Callback or method to call previously\r\n *                                                          to update\r\n * @property {(Function|string|symbol)} [posUpdate]       - Callback or method reference to call\r\n *                                                          after update\r\n * @property {string}                   [posUpdateEvent]  - Event name fired after update\r\n */\r\n\r\n/**\r\n *\r\n * Define a property into the class\r\n *\r\n * @param {Function} Class              - class to extend\r\n * @param {propertyDescriptor} property - options into a {@link propertyDescriptor}\r\n */\r\nfunction defineProperty (Class, property) {\r\n\r\n  // Property\r\n  defProp(\r\n    Class.prototype,\r\n    property.name,\r\n    {\r\n      set          : definePropertySet(property),\r\n      get          : definePropertyGet(property),\r\n      configurable : true,\r\n      enumerable   : false\r\n    }\r\n  );\r\n\r\n  // Value\r\n  if (!initialValues.has(Class)) {\r\n    initialValues.set(Class, {});\r\n  }\r\n  initialValues.get(Class)[property.name] = property.value;\r\n\r\n}\r\n\r\n/**\r\n * Pos processing function\r\n * @param {Object} property\r\n * @param {*} value\r\n */\r\nfunction pos (property, value) {\r\n  // Event emit\r\n  if (!isNull(property.posUpdateEvent)) {\r\n    if (property.posUpdateEvent) {\r\n      this[FIRE_EVENT](property.posUpdateEvent, {[property.name] : value});\r\n    } else {\r\n      this[FIRE_EVENT]('update', {[property.name] : value});\r\n    }\r\n  }\r\n\r\n  // pos update function\r\n  if (isFunction(property.posUpdate)) {\r\n    property.posUpdate.call(this, value);\r\n  } else if (isFunction(this[property.posUpdate])) {\r\n    this[property.posUpdate]();\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Return the property set function\r\n * @param {Object} property\r\n * @returns {function}\r\n */\r\nfunction definePropertySet (property) {\r\n  return function (value) {\r\n    let ctx = this[CONTEXT];\r\n\r\n    // Pre\r\n    if (isFunction(property.preUpdate)) {\r\n      if (!property.preUpdate.call(this, value)) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Schema normalization\r\n    if (property.schema) {\r\n      objectObserver.stop();\r\n      value = property.schema.normalize(value);\r\n      objectObserver.start();\r\n    }\r\n\r\n    // Is it change?\r\n    if (!isObject(value) && equal(ctx[property.name], value)) {\r\n      return;\r\n    }\r\n\r\n    // Custom update\r\n    if (isFunction(property.set)) {\r\n      property.set.call(this, value);\r\n    } else {\r\n      ctx[property.name] = isString(value) && property.type ?\r\n        // String conversion updated\r\n        str2value(value, property.type) :\r\n        // Other values\r\n        value;\r\n    }\r\n\r\n    // Update attribute\r\n    if (property.attribute && ![ARRAY, OBJECT].includes(property.type)) {\r\n      updateAttribute(this, property.name, value, property.type === BOOLEAN);\r\n    }\r\n\r\n    // Pos update\r\n    pos.call(this, property, value);\r\n\r\n  };\r\n}\r\n\r\n/**\r\n * Return the property get function\r\n * @param {Object} property\r\n * @returns {function}\r\n */\r\nfunction definePropertyGet (property) {\r\n  return function () {\r\n    if (isFunction(property.get)) {\r\n      return property.get.call(this);\r\n    } else {\r\n      const ctx = this[CONTEXT];\r\n      switch (property.type) {\r\n        case NUMBER:\r\n          return isUndefined(ctx[property.name]) ?\r\n            undefined :\r\n            Number(ctx[property.name]);\r\n        case BOOLEAN:\r\n          return !!ctx[property.name];\r\n        case OBJECT:\r\n        case ARRAY:\r\n          return objectObserver(\r\n            ctx[property.name] || (property.type === OBJECT ? {} : []),\r\n            obj => definePropertySet(property).call(this, obj)\r\n          );\r\n        default:\r\n          return ctx[property.name];\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Register the Web Component\r\n * @param {Function} Class - Class for this custom component\r\n * @param {string }name    - Tag Name\r\n */\r\nfunction registreComponent (Class, name) {\r\n\r\n  // Registre custom element\r\n  if (!customElements.get(COMPONENT_PREFIX + name.toLowerCase())) {\r\n    customElements.define(COMPONENT_PREFIX + name.toLowerCase(), Class);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Define a Base or\r\n * @param {Function} Class\r\n * @param {Object} [def={}]\r\n * @returns {object}\r\n */\r\nfunction define (Class, def = {}) {\r\n  def.property  = (...properties) => {\r\n    properties.forEach(property => defineProperty(Class, {...property}));\r\n    return def;\r\n  };\r\n  def.attribute = (...attributes) => {\r\n    attributes.forEach(attribute => defineAttribute(Class, {...attribute}));\r\n    return def;\r\n  };\r\n  def.tag       = (name) => {\r\n    registreComponent(Class, name);\r\n    return def;\r\n  };\r\n  def.extension = (fn) => {\r\n    fn.call(def, def, Class)\r\n    return def\r\n  }\r\n  return def;\r\n}\r\n\r\n/**\r\n * Export\r\n */\r\nexport {\r\n  Simple as default,\r\n  Simple,\r\n  define,\r\n  CHANGE,\r\n  CONTEXT,\r\n  FIRE_EVENT,\r\n  COMPONENT_PREFIX\r\n};\r\n", "/**\r\n * Returns a function, that, as long as it continues to be invoked, will not be triggered.\r\n * The function will be called after it stops being called for N milliseconds.\r\n * Warning: does not work correctly for methods, use debounceMethod() in that case.\r\n * @param {Function} fn   - original function\r\n * @param {number}   wait - number of milliseconds before the call\r\n * @return {Function}\r\n */\r\nexport function debounce (fn, wait) {\r\n  let n = 0;\r\n  return function (...args) {\r\n    clearTimeout(n);\r\n    n = setTimeout(() => {\r\n      fn.apply(this, args);\r\n    }, wait);\r\n  };\r\n}\r\n\r\n/**\r\n * Returns a promised function, that, as long as it continues to be invoked, will not be triggered.\r\n * The function will be called after it stops being called for N milliseconds.\r\n * Warning: does not work correctly for methods, use debounceMethodAsync() in that case.\r\n * @param {Function} fn   - original function\r\n * @param {number}   wait - number of milliseconds before the call\r\n * @return {Function}\r\n */\r\nexport function debounceAsync (fn, wait) {\r\n  let timeout    = 0;\r\n  const promises = [];\r\n  return function (...args) {\r\n    clearTimeout(timeout);\r\n    return new Promise((resolve, reject) => {\r\n      promises.push({resolve, reject});\r\n      timeout = setTimeout(() => {\r\n        try {\r\n          const res = fn.apply(this, args);\r\n          promises.forEach(p => p.resolve(res));\r\n        } catch (err) {\r\n          promises.forEach(p => p.reject(err));\r\n        }\r\n      }, wait);\r\n    });\r\n  };\r\n}\r\n\r\n/**\r\n * Returns a method, that, as long as it continues to be invoked, will not be triggered for\r\n * the same instance.\r\n * The method will be called after it stops being called for N milliseconds.\r\n * @param {function} fn   - original function\r\n * @param {number}   wait - number of milliseconds before the call\r\n * @return {function}\r\n */\r\nexport function debounceMethod (fn, wait) {\r\n  const prev = new WeakMap();\r\n  return function (...args) {\r\n    clearTimeout(prev.get(this));\r\n    prev.set(this, setTimeout(() => {\r\n      fn.apply(this, args);\r\n    }, wait));\r\n  };\r\n}\r\n\r\n/**\r\n * Returns an async method, that, as long as it continues to be invoked, will not be triggered.\r\n * The method will be called after it stops being called for N milliseconds.\r\n * @param {Function} fn   - original function\r\n * @param {number}   wait - number of milliseconds before the call\r\n * @return {Function}\r\n */\r\nexport function debounceMethodAsync (fn, wait) {\r\n  const instances = new WeakMap();\r\n  const promises  = [];\r\n  return function (...args) {\r\n    clearTimeout(instances.get(this));\r\n    return new Promise((resolve, reject) => {\r\n      promises.push({resolve, reject});\r\n      instances.set(this, setTimeout(() => {\r\n        try {\r\n          const res = fn.apply(this, args);\r\n          promises.forEach(p => p.resolve(res));\r\n        } catch (err) {\r\n          promises.forEach(p => p.reject(err));\r\n        } finally {\r\n          promises.length = 0;\r\n        }\r\n      }, wait));\r\n    })\r\n  };\r\n}\r\n\r\n/**\r\n * Returns a method, that, as long as it continues to be invoked, will not be triggered.\r\n * The method will be called after it stops being called for N milliseconds.\r\n * @param {Function} fn   - original function\r\n * @param {number}   wait - number of milliseconds before the call\r\n * @return {Function}\r\n */\r\nexport function debounceMethodParameter (fn, wait) {\r\n  const prev = new WeakMap();\r\n  return function (...args) {\r\n    if (prev.get(this)) {\r\n      clearTimeout(prev.get(this)[args[0]]);\r\n    } else {\r\n      prev.set(this, {});\r\n    }\r\n    prev.get(this)[args[0]] = setTimeout(() => {\r\n      delete prev.get(this)[args[0]];\r\n      fn.apply(this, args);\r\n    }, wait);\r\n  };\r\n}\r\n\r\n/**\r\n * Returns a function, that, as long as it continues to be invoked if the precCondition function\r\n * don't return true with the same arguments.\r\n * @param {Function} condition - pre condition function\r\n * @param {Function} fn        - original function\r\n * @return {Function}\r\n */\r\nexport function preCondition (condition, fn) {\r\n  return function (...args) {\r\n    if (condition.apply(this, args)) {\r\n      return fn.apply(this, args);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Return a function that execute after the function is called.\r\n * @param {Function} fn  - original function\r\n * @param {Function} pos - function called after the original\r\n * @return {Function}\r\n */\r\nexport function posExecution (fn, pos) {\r\n  return function (...args) {\r\n    const result = fn.apply(this, args);\r\n    if (result instanceof Promise) {\r\n      return result.then((res) => {\r\n        return pos.call(this, res) || res\r\n      });\r\n    }\r\n    return pos.call(this, result) || result;\r\n  }\r\n}", "/**\r\n *\r\n * Base class for Graphane web component\r\n *\r\n * @module base\r\n * @version 0.0.2\r\n * @author Pablo Almunia\r\n *\r\n */\r\nimport {\r\n  Simple,\r\n  define as defineSimple,\r\n  CHANGE,\r\n  CONTEXT,\r\n  FIRE_EVENT,\r\n  COMPONENT_PREFIX\r\n} from './simple.js';\r\nimport {\r\n  isUndefined, isFunction, isNull, EMPTY_STRING,\r\n} from '../helpers/types.js';\r\nimport {\r\n  debounceMethodAsync, posExecution, preCondition\r\n} from '../helpers/functions.js';\r\n\r\n// Constants\r\nconst DELAY = 1;\r\n\r\n// Public symbols\r\n/**\r\n * Symbol used for defines the refresh method into the class inherited from Base.\r\n * This method is called when the component is rendered and when some property\r\n * is changed and REFRESH is defined as pos update action.\r\n * @type {symbol}\r\n */\r\nconst REFRESH   = Symbol();\r\n/**\r\n * Symbol used for defines the render method into the class inherited from Base\r\n * This method is called when the component is created and when some property\r\n * is changed and RENDER is define as pos update action.\r\n * @type {symbol}\r\n */\r\nconst RENDER    = Symbol();\r\n/**\r\n * Symbol used for defines the resize method into the class inherited from Base.\r\n * This method is called when the component is resized.\r\n * @type {symbol}\r\n */\r\nconst RESIZE    = Symbol();\r\n/**\r\n * Symbol used for defines the map with CSS properties info.\r\n * @type {symbol}\r\n */\r\nconst CSS_PROPS = Symbol();\r\n\r\n/**\r\n * Update an attribute into the HTML\r\n * @param {HTMLElement} element\r\n * @param {string} attribute\r\n * @param {any} value\r\n * @param {boolean} [asBoolean=false]\r\n * @returns {undefined}\r\n */\r\nfunction updateAttribute (element, attribute, value, asBoolean = false) {\r\n  if (element.ready === false || !attribute) {\r\n    return;\r\n  }\r\n  if (asBoolean) {\r\n    if (value) {\r\n      element.setAttribute(attribute, EMPTY_STRING);\r\n    } else {\r\n      element.removeAttribute(attribute);\r\n    }\r\n  } else {\r\n    const valueNormalized = isNull(value) || isUndefined(value) ? EMPTY_STRING : value.toString();\r\n    if (element.hasAttribute(attribute) && element.getAttribute(attribute) !== valueNormalized) {\r\n      element.setAttribute(attribute, valueNormalized);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Base class for Graphane Web Component\r\n *\r\n * @fires 'ready'                 - This event fires when the component is ready and its methods and properties are available\r\n * @fires 'render'                - This event fires when the component is rendered and its visible content is displayed\r\n * @fires 'refresh'               - This event fires when the component is refreshed, and its visible content is updated\r\n * @fires 'resize'                - This event fires when the component size is changed\r\n * @property {boolean} [ready]    - It's true if the component is ready, or false is starting or busy.\r\n * @property {boolean} [rendered] - It's true if the component is rendered, and its visible content is displayed.\r\n */\r\nclass Base extends Simple {\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {boolean} [ready]\r\n   */\r\n  constructor (ready) {\r\n    super();\r\n\r\n    this.attachShadow({mode : 'open'});\r\n    this[CONTEXT].ready    = ready || false;\r\n    this[CONTEXT].rendered = false;\r\n\r\n    if (isUndefined(ready)) {\r\n      this.ready = true;\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * ready state\r\n   * @type {boolean}\r\n   */\r\n  get ready () {\r\n    return this[CONTEXT].ready;\r\n  }\r\n\r\n  set ready (value) {\r\n    const ctx = this[CONTEXT];\r\n    const pre = ctx.ready;\r\n    ctx.ready = !!value;\r\n    if (pre === false && ctx.ready === true) {\r\n      this[FIRE_EVENT]('ready', {ready : true});\r\n      if (isFunction(this[RENDER])) {\r\n        this[RENDER]();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * rendered state\r\n   * @returns {boolean}\r\n   */\r\n  get rendered () {\r\n    return this[CONTEXT].rendered;\r\n  }\r\n\r\n  set rendered (value) {\r\n    const ctx    = this[CONTEXT];\r\n    const pre    = ctx.rendered;\r\n    ctx.rendered = !!value;\r\n    if (pre === false && ctx.rendered === true) {\r\n      this[FIRE_EVENT]('render', {rendered : true});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Connected with the parent DOM\r\n   *   - Resize observer\r\n   * @private\r\n   */\r\n  connectedCallback () {\r\n    let reference     = this.getBoundingClientRect();\r\n    let flexDirection = getComputedStyle(this).flexDirection; // Specific for Icon class\r\n    const resize      = () => {\r\n      let {width : currentWidth, height : currentHeight} = this.getBoundingClientRect();\r\n      let currentFlexDirection                           = getComputedStyle(this).flexDirection;\r\n      if (currentWidth !== reference.width || currentHeight !== reference.height || currentFlexDirection !== flexDirection) {\r\n        if (isFunction(this[RESIZE])) {\r\n          this[RESIZE](\r\n            currentWidth,\r\n            currentHeight,\r\n            currentWidth - reference.width,\r\n            currentHeight - reference.height\r\n          );\r\n        }\r\n        reference     = {width : currentWidth, height : currentHeight};\r\n        flexDirection = currentFlexDirection;\r\n        this[FIRE_EVENT]('resize', reference);\r\n      }\r\n      this [CONTEXT]._resizeObserver = window.requestAnimationFrame(resize);\r\n    };\r\n    resize();\r\n  }\r\n\r\n  /**\r\n   * Disconnected of parent DOM\r\n   *   - Remove resize observer\r\n   * @private\r\n   */\r\n  disconnectedCallback () {\r\n    window.cancelAnimationFrame(this [CONTEXT]._resizeObserver);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n *\r\n * Property descriptor used into defineProperty\r\n *\r\n * @typedef {Object} cssPropertyDescriptor\r\n * @property {string}  name              - custom property name\r\n * @property {string}  [syntax='']       - syntax of the custom property\r\n * @property {string}  [initialValue=''] - initial value\r\n * @property {string}  [value='']        - initial value (alias)\r\n * @property {boolean} [inherits=false]  - inherit\r\n */\r\n\r\n/**\r\n *\r\n * Define a CSS property into the class\r\n *\r\n * @param {Function} Class            - class to extend\r\n * @param {cssPropertyDescriptor} def - options into a {@link cssPropertyDescriptor}\r\n */\r\nfunction defineStyleProperty (Class, def) {\r\n  const definition = {\r\n    name         : def.name.startsWith('--') ?\r\n      def.name :\r\n      `--${ COMPONENT_PREFIX }${ def.name }`,\r\n    initialValue : def.initialValue ?? def.value ?? '',\r\n    syntax       : def.syntax ?? '*',\r\n    inherits     : def.inherits ?? true\r\n  };\r\n  if (!Class.prototype[CSS_PROPS]) {\r\n    Class.prototype[CSS_PROPS] = {};\r\n  }\r\n  Class.prototype[CSS_PROPS][definition.name] = definition;\r\n}\r\n\r\n/**\r\n *\r\n * Define a Component\r\n *\r\n * @param {Function} Class - Class for this custom component\r\n */\r\nfunction defineComponent (Class) {\r\n\r\n  // Async call to render method\r\n  if (isFunction(Class.prototype[RENDER])) {\r\n    const preRender         = Class.prototype[RENDER];\r\n    Class.prototype[RENDER] =\r\n      preCondition(\r\n        function () {\r\n          this.rendered = false;\r\n          return this.ready;\r\n        },\r\n        debounceMethodAsync(\r\n          posExecution(\r\n            async function () {\r\n              return preRender.apply(this);\r\n            },\r\n            function (result) {\r\n              this.rendered = result !== false;\r\n              if (this.rendered && isFunction(this[REFRESH])) {\r\n                this[REFRESH]();\r\n              }\r\n            }\r\n          ),\r\n          DELAY\r\n        )\r\n      );\r\n  }\r\n\r\n  // Async call to refresh method\r\n  if (isFunction(Class.prototype[REFRESH])) {\r\n    const prevRefresh        = Class.prototype[REFRESH];\r\n    Class.prototype[REFRESH] =\r\n      preCondition(\r\n        function (force) {\r\n          if (force) {\r\n            this[CONTEXT].rendered = true;\r\n          }\r\n          return this.ready && this[CONTEXT].rendered;\r\n        },\r\n        debounceMethodAsync(\r\n          posExecution(\r\n            async function (...args) {\r\n              return prevRefresh.apply(this, args);\r\n            },\r\n            function () {\r\n              this[FIRE_EVENT]('refresh');\r\n            }\r\n          ),\r\n          DELAY\r\n        )\r\n      );\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Define a Base or\r\n * @param {Function} Class\r\n * @returns {object}\r\n */\r\nfunction define (Class) {\r\n  defineComponent(Class);\r\n  const def = defineSimple(Class, {\r\n    style : (...styles) => {\r\n      styles.forEach(style => defineStyleProperty(Class, {...style}));\r\n      return def;\r\n    }\r\n  });\r\n  return def;\r\n}\r\n\r\nBase.RENDER  = RENDER;\r\nBase.REFRESH = REFRESH;\r\nBase.CHANGE  = CHANGE;\r\n\r\n/**\r\n * Export\r\n */\r\nexport {\r\n  Base as default,\r\n  Base,\r\n  Simple,\r\n  define,\r\n  RENDER,\r\n  REFRESH,\r\n  CHANGE,\r\n  CONTEXT,\r\n  RESIZE,\r\n  CSS_PROPS,\r\n  FIRE_EVENT,\r\n  COMPONENT_PREFIX\r\n};\r\n", "const EVENT_IN  = 'intersection.enter';\r\nconst EVENT_OUT = 'intersection.exit';\r\nconst OBSERVER  = Symbol();\r\nconst options   = {\r\n  \"root\"       : null,\r\n  \"rootMargin\" : \"0px\",\r\n  \"threshold\"  : Array(21).fill(0).map((x, y) => y * 0.05)\r\n};\r\n\r\n\r\n// intersection\r\nexport function intersection (ratio) {\r\n  let intersected = false;\r\n  if (this[OBSERVER]) {\r\n    this[OBSERVER].disconnect();\r\n  }\r\n  this[OBSERVER] = new IntersectionObserver(entries => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting && entry.intersectionRatio >= ratio) {\r\n        if (!intersected) {\r\n          intersected = true;\r\n          this.dispatchEvent(new CustomEvent(\r\n            EVENT_IN,\r\n            {bubbles : true, cancelable : true, composed : true}\r\n          ));\r\n        }\r\n      } else {\r\n        intersected = false;\r\n        this.dispatchEvent(new CustomEvent(\r\n          EVENT_OUT,\r\n          {bubbles : true, cancelable : true, composed : true}\r\n        ));\r\n      }\r\n    });\r\n  }, options);\r\n  this[OBSERVER].observe(this._el || this);\r\n}\r\n\r\nexport default intersection;", "import { CONTEXT, FIRE_EVENT } from \"./base.js\";\r\nimport { STRING, NUMBER }      from '../helpers/types.js';\r\nimport intersection            from \"../helpers/intersection.js\";\r\n\r\nexport function intersectionCoreExtension (defineObject) {\r\n  defineObject\r\n    .attribute({name : 'intersection-once-class', type : STRING, value : ''})\r\n    .attribute({name : 'intersection-class', type : STRING, value : ''})\r\n    .attribute({name : 'intersection-ratio', type : NUMBER, value : 0, posUpdate : observer})\r\n}\r\n\r\nconst add    = (classList, classes) => classes && classes.split(/\\s+/).forEach(cl => classList.add(cl));\r\nconst remove = (classList, classes) => classes && classes.split(/\\s+/).forEach(cl => classList.remove(cl));\r\n\r\nfunction observer () {\r\n  const ctx       = this[CONTEXT];\r\n  const classList = this.classList;\r\n  this.addEventListener('intersection.enter', () => {\r\n    add(classList, ctx.intersectionOnceClass);\r\n    add(classList, ctx.intersectionClass);\r\n  });\r\n  this.addEventListener('intersection.exit', () => {\r\n    remove(classList, ctx.intersectionClass);\r\n  });\r\n  intersection.call(this, ctx.intersectionRatio);\r\n}\r\n\r\n\r\nexport default intersectionCoreExtension;\r\n", "import {\r\n  EMPTY_STRING, COMA,\r\n  isSymbol, isObject, isString, isUndefined, isFunction, isBoolean, isNull\r\n} from '../helpers/types.js';\r\n\r\nconst NAME                    = 'gSVGObject';\r\nconst NS                      = 'http://www.w3.org/2000/svg';\r\nconst SVG                     = 'svg';\r\nconst D                       = 'd';\r\nconst TRANSFORM               = 'transform';\r\nconst APPEND_CHILD            = 'appendChild';\r\nconst INSERT_BEFORE           = 'insertBefore';\r\nconst INSERT_ADJACENT_ELEMENT = 'insertAdjacentElement';\r\nconst ATTACH                  = 'attach';\r\nconst INNER_HTML              = 'innerHTML';\r\n\r\nconst cache        = new WeakMap();\r\nconst readonlyProp = new Set();\r\n\r\n\r\n/**\r\n * Check if is direct access member\r\n * @param {string} prop\r\n * @returns {boolean}\r\n */\r\nconst directAccess = (prop) => isSymbol(prop) || prop.startsWith('_') || ['el', 'gSVG', 'then'].includes(prop);\r\n\r\n/**\r\n * Check the instance\r\n * @param {object} o\r\n * @param {object} p\r\n * @returns {boolean}\r\n */\r\nconst is = (o, p) => o instanceof p;\r\n\r\n/**\r\n * Create a random id\r\n * @returns {string}\r\n */\r\nconst randomId = () => NAME + Math.random().toString(32).substring(2);\r\n\r\n/**\r\n * Check if the element is wrapped or not\r\n * @param {*} el\r\n * @returns {boolean}\r\n */\r\nconst isWrapped = (el) => isObject(el) && !isNull(el) && el[Symbol.toStringTag] === NAME;\r\n\r\n/**\r\n * Create a new element\r\n * @param tag\r\n * @returns {gSVGObject}\r\n */\r\nconst create = (tag) => wrapper(document.createElementNS(NS, tag));\r\n\r\n/**\r\n * Create, wrap or return the wrapped object\r\n * @param {gSVGObject|object|string} tag\r\n * @returns {gSVGObject|object}\r\n */\r\nconst createWrap = (tag) =>\r\n  isString(tag) ?\r\n    create(tag) :\r\n    isObject(tag) && tag !== null ?\r\n      isWrapped(tag) ?\r\n        tag :\r\n        wrapper(tag) :\r\n      tag;\r\n\r\n/**\r\n * Return the original method name for an alias\r\n * @param {string} prop\r\n * @returns {string}\r\n */\r\nconst alias = (prop) => ({\r\n  content   : INNER_HTML,\r\n  source    : 'outerHTML',\r\n  parent    : 'parentElement',\r\n  next      : 'nextElementSibling',\r\n  previous  : 'previousElementSibling',\r\n  add       : APPEND_CHILD,\r\n  addBefore : INSERT_BEFORE\r\n})[prop] || prop;\r\n\r\n/**\r\n * Return a wrapped method for append element operations\r\n * @param {string} method\r\n * @returns {function|null}\r\n */\r\nconst appendMethods = (method) => {\r\n  return ['append', 'before', 'after',\r\n          APPEND_CHILD, INSERT_BEFORE, INSERT_ADJACENT_ELEMENT].includes(method) ?\r\n    function (...params) {\r\n      const a = [];\r\n      const b = [];\r\n      const c = [];\r\n      if (method === INSERT_ADJACENT_ELEMENT) {\r\n        a.push(params[0]);\r\n        b.push(createWrap(params[1]));\r\n      } else if (method === INSERT_BEFORE) {\r\n        b.push(createWrap(params[0]));\r\n        c.push(params[1] || this.firstChild || null);\r\n      } else {\r\n        b.push(...params.map(createWrap))\r\n      }\r\n      if (!b.every(el => el?._el)) {\r\n        return b[0];\r\n      }\r\n      this[method](...[...a, ...b.map(el => el ? el._el : el), ...c]);\r\n      b.forEach(el => el._el.dispatchEvent(new Event(ATTACH)));\r\n      return b.length > 1 ? b : b[0];\r\n    } :\r\n    null;\r\n}\r\n\r\n\r\n/**\r\n * @typedef {Object} gSVGObject\r\n */\r\n\r\n/**\r\n * GSVGObject\r\n */\r\nclass GSVGObject {\r\n\r\n  constructor (element) {\r\n    this._el  = element;\r\n    this.gSVG = gSVG;\r\n  }\r\n\r\n  get [Symbol.toStringTag] () {\r\n    return NAME;\r\n  }\r\n\r\n  /**\r\n   * el\r\n   * @type {Object}\r\n   */\r\n  get el () {\r\n    return this._el;\r\n  }\r\n\r\n  /**\r\n   * @param {string|Object} tag\r\n   * @returns {gSVGObject}\r\n   */\r\n  attachTo (tag) {\r\n    const r = isObject(tag) ?\r\n      (isWrapped(tag) ?\r\n          tag._el :\r\n          tag\r\n      ) :\r\n      document.querySelector(tag);\r\n    r.appendChild(this._el);\r\n    this._el.dispatchEvent(new Event(ATTACH));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * gSVGObject.id()\r\n   * @param {string} [value]\r\n   * @returns {string|gSVGObject}\r\n   */\r\n  id (value) {\r\n    if (!value) {\r\n      return this._el.id || (this._el.id = randomId());\r\n    }\r\n    this._el.setAttribute('id', value);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * gSVGObject.ref()\r\n   * @returns {string}\r\n   */\r\n  ref () {\r\n    return `#${ this.id() }`;\r\n  }\r\n\r\n  /**\r\n   * gSVGObject.url()\r\n   * @returns {string}\r\n   */\r\n  url () {\r\n    return `url(${ this.ref() })`;\r\n  }\r\n\r\n  /**\r\n   * gSVGObject.parents()\r\n   * @returns {[{object}]}\r\n   */\r\n  parents () {\r\n    const result = [];\r\n    let el       = this;\r\n    while (el = el.parentElement()) {\r\n      result.push(el);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * gSVGObject.parents()\r\n   * @returns {object}\r\n   */\r\n  top () {\r\n    return this.parents().pop() || this;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @param element\r\n * @returns {gSVGObject}\r\n */\r\nconst wrapper = (element) => {\r\n  if (!isObject(element) || isNull(element)) {\r\n    return null;\r\n  }\r\n  if (cache.has(element)) {\r\n    return cache.get(element);\r\n  }\r\n  const proxy = new Proxy(\r\n    new GSVGObject(element),\r\n    // Handler\r\n    {\r\n      get (wrapped, prop) {\r\n        // Symbol return\r\n        if (directAccess(prop)) {\r\n          return wrapped[prop];\r\n        }\r\n        // Return the wrapper method\r\n        if (!isUndefined(wrapped[prop])) {\r\n          return (...args) => {\r\n            preCall(proxy, prop, args);\r\n            return wrapped[prop].call(proxy, ...args);\r\n          }\r\n        }\r\n        // Special cases 'd' and 'transform'\r\n        if ([D, TRANSFORM, '$' + D, '$' + TRANSFORM].includes(prop)) {\r\n          let content   = '';\r\n          let directive = prop[0] === '$';\r\n          if (directive) {\r\n            prop = prop.substring(1);\r\n          }\r\n          const processor = prop === D ? pathD : elTransform;\r\n          const dProxy    = new Proxy(\r\n            (arg) => {\r\n              preCall(proxy, prop, [arg]);\r\n              if (isUndefined(arg)) {\r\n                return element.getAttribute(prop);\r\n              }\r\n              arg ?\r\n                element.setAttribute(prop, arg) :\r\n                element.removeAttribute(prop);\r\n              return proxy;\r\n            },\r\n            {\r\n              get (_target, command) {\r\n                if (command in _target) {\r\n                  return Reflect.get(_target, command);\r\n                }\r\n                return (...args) => {\r\n                  if (command === Symbol.toPrimitive) {\r\n                    const ret = content;\r\n                    content   = '';\r\n                    return ret\r\n                  }\r\n                  content += processor(proxy, command, args);\r\n                  element?.setAttribute(prop, content);\r\n                  return dProxy;\r\n                };\r\n              }\r\n            }\r\n          );\r\n          return dProxy;\r\n        }\r\n        // Return the element method\r\n        const altProp = alias(prop);\r\n        const fn      = appendMethods(altProp) || element[altProp];\r\n        if (isFunction(fn)) {\r\n          return (...args) => {\r\n            preCall(proxy, prop, args);\r\n            const result = fn.call(element, ...args);\r\n            return (\r\n              isUndefined(result) ?\r\n                proxy :\r\n                adaptedResult(result)\r\n            );\r\n          };\r\n        }\r\n        // Return the wrapped method\r\n        return methodWrapper(element, altProp, proxy);\r\n      }\r\n    }\r\n  );\r\n  cache.set(element, proxy);\r\n  return proxy;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Object} element\r\n * @param {string} prop\r\n * @param {Object} parentWrapper\r\n * @param {string} [parentProp]\r\n * @returns {Proxy<function()>}\r\n */\r\nconst methodWrapper = (element, prop, parentWrapper, parentProp) => {\r\n  const propNormalized = prop.replace(/_/g, '-');\r\n  const f              = (...args) => {\r\n    preCall(parentWrapper, parentProp ? `${ parentProp }.${ prop }` : prop, args);\r\n    // Get value\r\n    if (args.length === 0) {\r\n      const result = element?.hasAttribute && element.hasAttribute(propNormalized) ?\r\n        element.getAttribute(propNormalized) :\r\n        element[propNormalized];\r\n      return adaptedResult(result);\r\n    }\r\n    // Set value as property\r\n    const value = args[0];\r\n    if (is(element, CSSStyleDeclaration)) {\r\n      element[propNormalized] = value;\r\n      return parentWrapper;\r\n    }\r\n    if (propNormalized in element && !readonlyProp.has(propNormalized)) {\r\n      const previousValue = element[propNormalized];\r\n      if (String(previousValue) === String(value)) {  // !!Check!!\r\n        return parentWrapper;\r\n      }\r\n      try {\r\n        element[propNormalized] = value;\r\n      } catch (err) {\r\n        readonlyProp.add(propNormalized);\r\n      }\r\n      if (\r\n        (isObject(element[propNormalized]) && element[propNormalized] === value) ||\r\n        element[propNormalized] !== previousValue ||\r\n        propNormalized === INNER_HTML\r\n      ) {\r\n        return parentWrapper;\r\n      }\r\n      readonlyProp.add(propNormalized);\r\n    }\r\n    // Set value as attribute\r\n    if (value !== 0 && !value) {\r\n      element?.removeAttribute && element.removeAttribute(propNormalized);\r\n    } else {\r\n      element?.setAttribute && element.setAttribute(propNormalized, isBoolean(value) ?\r\n        '' :\r\n        String(args));\r\n    }\r\n    return parentWrapper;\r\n  };\r\n  return new Proxy(\r\n    f,\r\n    {\r\n      get (_target, prop2) {\r\n        const result = element[propNormalized][prop2];\r\n        return (\r\n          isFunction(result) ?\r\n            (...args) => {\r\n              preCall(parentWrapper, `${ prop }.${ prop2 }`, args)\r\n              return result.call(element[propNormalized], ...args) || parentWrapper;\r\n            } :\r\n            methodWrapper(element[propNormalized], prop2, parentWrapper, propNormalized)\r\n        );\r\n      },\r\n      set (_target, prop2, value2) {\r\n        element[propNormalized][prop2] = value2;\r\n        return true;\r\n      }\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * adaptedResult\r\n * @param {*} result\r\n * @returns {*}\r\n */\r\nconst adaptedResult = (result) => {\r\n  return (\r\n    is(result, HTMLCollection) || is(result, NodeList) ?\r\n      [...result].map(x => wrapper(x)) :\r\n      is(result, SVGElement) ?\r\n        wrapper(result) :\r\n        isString(result) ?\r\n          result === '' || Number.isNaN(Number(result)) ?\r\n            result :\r\n            Number(result) :\r\n          result\r\n  );\r\n};\r\n\r\nconst registeredCalls = [];\r\n\r\n/**\r\n * pluginCallback\r\n * @param {Object} wrapped\r\n * @param {string} prop\r\n * @param {Array} args\r\n * @param {Array} [extensions]\r\n */\r\nconst preCall = (wrapped, prop, args, extensions = []) => {\r\n  for (let call of registeredCalls) {\r\n    call(gSVG, wrapped, prop, args, extensions);\r\n  }\r\n};\r\n\r\nconst registeredPathD = {};\r\n\r\n/**\r\n * pathD\r\n * @param {Object} wrapped\r\n * @param {string} prop\r\n * @param {Array} args\r\n */\r\nconst pathD = (wrapped, prop, args) => {\r\n  preCall(wrapped, `d.${ prop }`, args, Object.keys(registeredPathD).map(k => `d.${ k }`));\r\n  return registeredPathD[prop] ?\r\n    registeredPathD[prop].apply(wrapped, args) :\r\n    `${ prop }${ args.join(COMA) }`\r\n}\r\n\r\n/**\r\n * elTransform\r\n * @param {Object} wrapped\r\n * @param {string} prop\r\n * @param {Array} args\r\n */\r\nconst elTransform = (wrapped, prop, args) => {\r\n  preCall(wrapped, `transform.${ prop }`, args);\r\n  return `${ prop }(${ args.join(COMA) })`\r\n}\r\n\r\n/**\r\n * @typedef {function} gSVG\r\n */\r\n\r\n/**\r\n * gSVG\r\n * @param {Object|gSVGObject|string} [el]\r\n * @returns {gSVGObject|Object|null}\r\n * @constructor\r\n */\r\nexport function gSVG (el) {\r\n  preCall(null, EMPTY_STRING, [el]);\r\n  return createWrap(isUndefined(el) ? SVG : el);\r\n}\r\n\r\n/**\r\n * gSVG.isWrapped()\r\n * @type {function({Object}) : boolean}\r\n */\r\ngSVG.isWrapped = isWrapped;\r\n\r\nconst Extensor = (obj) => (extension) => isFunction(extension) ?\r\n  extension(obj) :\r\n  Object.assign(obj, extension);\r\n\r\nconst setup       = {\r\n  install,\r\n  extendConstructor : Extensor(gSVG),\r\n  extendInstance    : Extensor(GSVGObject.prototype),\r\n  extendPath        : Extensor(registeredPathD),\r\n  beforeEveryCall (callback) {\r\n    if (isFunction(callback)) {\r\n      registeredCalls.push(callback);\r\n    }\r\n  }\r\n};\r\nsetup.extendSetup = Extensor(setup);\r\n\r\n/**\r\n * gSVG.install - load new plugins\r\n * @param {Function} plugin\r\n * @return {gSVG|Promise}\r\n */\r\nfunction install (plugin) {\r\n  plugin(setup);\r\n  return gSVG;\r\n}\r\n\r\ngSVG.install = install;\r\n\r\nexport default gSVG;\r\n", "const cache         = new Map();\r\nconst functionName  = /function\\s+([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$_\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}]*)\\s*\\(/gmu;\r\nconst AsyncFunction = (async function () {\r\n}).constructor;\r\n\r\nexport function createFunction (args, code, async = false) {\r\n  const key = `${ args.join(',') } ${ code }`;\r\n  if (cache.has(key)) {\r\n    return cache.get(key);\r\n  }\r\n  const fn = new (async ? AsyncFunction : Function)(...args, code);\r\n  cache.set(key, fn);\r\n  return fn;\r\n}\r\n\r\n\r\nexport function getFunctions (globals, code) {\r\n  const names = [...code.matchAll(functionName)].map(x => x[1]);\r\n  try {\r\n    const fn = createFunction(Object.keys(globals), `${ code };\r\n  \r\n    return {${ names.map(n => `${ n }: typeof ${ n } === 'function' ? ${ n } : undefined`) }};\r\n  `);\r\n    return fn(...Object.values(globals));\r\n  } catch (err) {\r\n    console.warn(err.message, '\\n', code);\r\n  }\r\n}", "export function isValidIdentifier(identifier) {\r\n  try {\r\n    new Function(`const ${identifier} = 0`);\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}", "import { isObject, isString, isFunction, isArray, toCamel } from '../helpers/types.js';\r\n\r\nconst SVG       = 'SVG';\r\nconst ANIMATE   = 'animate';\r\nconst FILL      = 'none';\r\nconst FREEZE    = 'freeze';\r\nconst PATH      = 'path';\r\nconst D         = 'd';\r\nconst TRANSFORM = 'transform';\r\nconst ROTATE    = 'rotate';\r\nconst TRANSLATE = 'translate';\r\nconst OFFSET    = 'offset';\r\nconst INHERIT   = 'inherit';\r\nconst FINISHED  = 'finished';\r\nconst DEG_TYPES = [ROTATE, 'skewX', 'skewY'];\r\nconst DEG       = 'deg';\r\nconst PX        = 'px';\r\nconst MS        = 'ms';\r\nconst TO_PIXELS = ['width', 'height', 'x' , 'y', 'cx', 'cy', 'r', 'rx', 'ry'];\r\n\r\n/**\r\n * The reduced-motion flag\r\n * @type {boolean}\r\n */\r\nlet reduceMotion = false;\r\nif (window.matchMedia) {\r\n  const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\r\n  reduceMotion     = mediaQuery.matches;\r\n  mediaQuery.addEventListener('change', () => {\r\n    reduceMotion = mediaQuery.matches;\r\n  });\r\n}\r\n\r\n/**\r\n * Convert property name to attribute with hyphens\r\n * @param {string} name\r\n * @returns {string}\r\n */\r\nconst toHyphen = name => name.replace(/([A-Z])/g, '-$1').toLowerCase();\r\n\r\n/**\r\n * @param {object|array<object>} keyframes\r\n * @param {number|object} [options]\r\n * @param {function|null} [startCallback]\r\n * @param {function|null} [endCallback]\r\n * @return {gSVGObject}\r\n * Notice: the original animateTo method is overwriting for this plugin\r\n */\r\nfunction animateTo (keyframes, options = {duration : 200}, startCallback = null, endCallback = null) {\r\n\r\n  const gSVG = this.gSVG;\r\n\r\n  /**\r\n   * Fixed and configure default values for .animateTo() options\r\n   * @param {object} opts\r\n   * @returns {object}\r\n   */\r\n  const normalizeOptions = (opts) => {\r\n    const normalizedConfig = isObject(opts) ? {...opts} : {duration : opts};\r\n    if (reduceMotion) {\r\n      normalizedConfig.duration = 0;\r\n    }\r\n    normalizedConfig.fill = FILL;\r\n    return normalizedConfig;\r\n  }\r\n\r\n  /**\r\n   * Transform and configure default values for .animate() keyframes. Detect unsupported attributes.\r\n   * @param {object|[{}]} originalKeyframes\r\n   * @returns {[{}]}\r\n   */\r\n  const normalizeKeyframes = (originalKeyframes) => {\r\n    originalKeyframes     = isArray(originalKeyframes) ?\r\n      originalKeyframes :\r\n      [originalKeyframes];\r\n    const computedStyle   = window.getComputedStyle(this._el);\r\n    const normalizeFrames = [];\r\n    const alternativeKeys = new Set();\r\n    for (let keyframe of originalKeyframes) {\r\n      const normalized = {};\r\n      for (let rawKey in keyframe) {\r\n        const key = toCamel(rawKey);\r\n        normalized[key] = keyframe[rawKey];\r\n        if (TO_PIXELS.includes(key)) {\r\n          normalized[key] = normalized[key] + 'px';\r\n        }\r\n        if (!(key in computedStyle)) {\r\n          alternativeKeys.add(key);\r\n        } else if (key === D) {\r\n          normalized.d = `${ PATH }(\"${ normalized.d }\")`\r\n        } else if (key === TRANSFORM) {\r\n          normalized.transform = transform(normalized.transform)\r\n        }\r\n      }\r\n      normalizeFrames.push(normalized);\r\n    }\r\n    addAlternatives(alternativeKeys, normalizeFrames);\r\n    return normalizeFrames;\r\n  }\r\n\r\n  const alternatives    = []\r\n  /**\r\n   * create SMIL animate as alternative\r\n   * @param {Set} keys\r\n   * @param {[{}]} normalizeFrames\r\n   */\r\n  const addAlternatives = (keys, normalizeFrames) => {\r\n    if (keys.size) {\r\n      const computedFrames = new KeyframeEffect(null, normalizeFrames).getKeyframes();\r\n      const initialTime    = this.closest(SVG) ? this.closest(SVG).getCurrentTime() * 1000 : 0;\r\n      for (let key of keys) {\r\n        const altAnimate = gSVG(ANIMATE)\r\n          .attributeName(key)\r\n          .dur(config.duration + MS)\r\n          .begin((0 | initialTime + (options.delay || 0)) + MS)\r\n          .fill(FREEZE);\r\n        if (normalizeFrames.length === 1) {\r\n          altAnimate.to(normalizeFrames[0][key]);\r\n        } else {\r\n          const keyTimes = [];\r\n          const values   = [];\r\n          for (let n in computedFrames) {\r\n            const frame = computedFrames[n];\r\n            if (key in normalizeFrames[n]) {\r\n              keyTimes.push(frame.computedOffset);\r\n              values.push(normalizeFrames[n][key]);\r\n            }\r\n          }\r\n          if (keyTimes[0] !== 0) {\r\n            keyTimes.unshift(0);\r\n            values.unshift(this[key]() || INHERIT);\r\n          }\r\n          if (keyTimes[keyTimes.length - 1] !== 1) {\r\n            keyTimes.push(1);\r\n            values.push(this[key]() || INHERIT);\r\n          }\r\n          altAnimate.keyTimes(keyTimes.join(';')).values(values.join(';'));\r\n        }\r\n        alternatives.push(altAnimate);\r\n        altAnimate.attachTo(this)\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Normalize a transform property\r\n   * @param {object|string} property\r\n   * @returns {string|*}\r\n   */\r\n  const transform = (property) => {\r\n    if (isString(property)) {\r\n      property = JSON.parse('{' +\r\n                            property\r\n                              .replace(/\\s*\\(\\s*/g, ':[')\r\n                              .replace(/\\s*\\)\\s*/g, '],')\r\n                              .split(/\\s*,\\s*|\\s.*/).join(',')\r\n                              .replace(/(\\w+):/g, '\"$1\":')\r\n                              .replace(/,$/, '')\r\n                            + '}');\r\n    }\r\n    let result = '';\r\n    for (let key in property) {\r\n      if (key === ROTATE) {\r\n        const values = transformValue(property[key]);\r\n        if (values.length > 1) {\r\n          result += `${ TRANSLATE }(${ values[1] }${ PX },${ values[2] }${ PX }) `\r\n        }\r\n        result += `${ key }(${ values[0] }${ transformUnit(key) }) `\r\n        if (values.length > 1) {\r\n          result += `${ TRANSLATE }(-${ values[1] }${ PX },-${ values[2] }${ PX }) `\r\n        }\r\n      } else {\r\n        result += `${ key }(${ transformValue(property[key]).map(v => v + transformUnit(key)).join(',') }) `\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Create a normalized transform value array\r\n   * @param {*} value\r\n   * @returns {[]}\r\n   */\r\n  const transformValue = (value) => (isArray(value) ? value : String(value).split(/\\s+|,/));\r\n\r\n  /**\r\n   * Return the transform value\r\n   * @param {string} type\r\n   * @returns {string}\r\n   */\r\n  const transformUnit = (type) => DEG_TYPES.includes(type) ?\r\n    DEG :\r\n    type === TRANSLATE ? PX : '';\r\n\r\n  /**\r\n   * Convert to valida attribute value\r\n   * @param {string|*} value\r\n   * @returns {string|*}\r\n   */\r\n  const value2attribute = (value) =>\r\n    isString(value) ?\r\n      value.replace(/(deg)|(px)/g, '').trim() :\r\n      value\r\n\r\n  /**\r\n   * Transform d CSS property to valid d attribute format\r\n   * @param {string} d\r\n   * @returns {string}\r\n   */\r\n  const d2attribute = (d) => d\r\n    .replace(/(path\\s*\\(\\s*[\"'])|([\"']\\s*\\)\\s*$)/g, '')\r\n    .trim()\r\n    .replace(/([a-zA-Z])\\s*/g, '$1')\r\n    .replace(/\\s+/g, ',');\r\n\r\n  /**\r\n   * Transform d CSS property to valid d attribute format\r\n   * @param {string} transform\r\n   * @returns {string}\r\n   */\r\n  const transform2attribute = (transform) => {\r\n    const regex = /translate\\((.*)px,(.*)px\\) rotate\\((.*)deg\\) translate\\((.*)px,(.*)px\\)\\s+/;\r\n    const match = regex.exec(transform);\r\n    if (match && Number(match[1]) === Number(match[4]) * -1 && Number(match[2]) === Number(match[5]) * -1) {\r\n      transform = transform.replace(regex, `rotate(${match[3]}, ${match[1]}, ${match[2]})`)\r\n    } else {\r\n      transform = value2attribute(transform);\r\n    }\r\n    return transform;\r\n  }\r\n\r\n\r\n  // Main code\r\n  const config    = normalizeOptions(options);\r\n  const frames    = normalizeKeyframes(keyframes);\r\n  const animation = this._el.animate(frames, config);\r\n\r\n  animation.ready.then(() => isFunction(startCallback) && startCallback.call(this, animation));\r\n\r\n  animation.finished.then(() => {\r\n    const lastAttributes = frames[frames.length - 1];\r\n    for (let attr in lastAttributes) {\r\n      const attrKey = toHyphen(attr);\r\n      if (attrKey.startsWith(\"text-\")) {\r\n        this._el.style[attr] = lastAttributes[attr];\r\n      } else if (attr !== OFFSET && attr in lastAttributes) {\r\n        this._el.setAttribute(\r\n          attrKey,\r\n          attrKey === D ?\r\n            d2attribute(lastAttributes[attr]) :\r\n            attrKey === TRANSFORM ?\r\n              transform2attribute(lastAttributes[attr]) :\r\n              value2attribute(lastAttributes[attr]));\r\n      }\r\n    }\r\n    alternatives.forEach(altAnimate => {\r\n      altAnimate[FINISHED](true);\r\n      const animates = this._el.querySelectorAll(ANIMATE);\r\n      const finished = this._el.querySelectorAll(`${ ANIMATE }[${ FINISHED }]`);\r\n      if (animates.length === finished.length) {\r\n        animates.forEach(a => a.remove())\r\n      }\r\n    });\r\n    isFunction(endCallback) && endCallback.call(this, animation);\r\n  });\r\n\r\n  return this;\r\n}\r\n\r\n\r\nexport function svgPlugin (setup) {\r\n  // Update gSVGObject\r\n  setup.extendInstance({\r\n    animateTo\r\n  });\r\n}", "import {\r\n  ARRAY, OBJECT, NUMBER,\r\n  isArray, isObject, isNumber, isFunction, isUndefined\r\n}                                       from '../helpers/types.js';\r\nimport { createFunction }               from '../helpers/function.create.js';\r\nimport { isValidIdentifier }            from \"../helpers/identifier.js\";\r\nimport { svgPlugin as animateToPlugin } from './animateto.js';\r\n\r\nconst INIT       = Symbol();\r\nconst CLONED     = Symbol();\r\nconst CLONES     = Symbol();\r\nconst TEMPLATE   = Symbol();\r\nconst EVENTS     = Symbol();\r\nconst UNKNOWN    = 'unknown';\r\nconst LABEL      = 'Graphane SVG Template Engine:';\r\nconst directives = [];\r\n\r\n/**\r\n * g-context\r\n * Directive that sets the content of an element to the result of the given expression, especially\r\n * with <tspan></tspan> and <text></text>.\r\n * @example\r\n * <text g-content:=\"value\"></text>\r\n */\r\ndefineDirective({\r\n  name : 'g-content',\r\n  execute (gObject, {expression, data, evalExpression}) {\r\n    gObject.content(evalExpression(expression, data));\r\n  }\r\n});\r\n\r\n/**\r\n * g-if\r\n * Directive that provides an expressive way to show and hide elements.\r\n * @example\r\n * <g g-if=\"value\"></g>\r\n */\r\ndefineDirective({\r\n  name : 'g-if',\r\n  execute (gObject, {expression, data, evalExpression}) {\r\n    gObject.style.visibility(evalExpression(expression, data) ? 'inherit' : 'hidden');\r\n  }\r\n});\r\n\r\n/**\r\n * g-bind: or :\r\n * Directive allowing to set attributes on elements based on the result of the expression. It is\r\n * necessary to indicate the attribute name after the directive or the shorthand.\r\n * @example\r\n * <rect g-bind:x=\"valueX\" :y=\"valueY\"></rect>\r\n */\r\ndefineDirective({\r\n  name     : 'g-bind',\r\n  alias    : ':',\r\n  argument : true,\r\n  execute (gObject, {expression, argument, data, evalExpression}) {\r\n    const context      = {\r\n      ...data,\r\n      $$ : ['d', 'transform'].includes(argument) ?\r\n        gObject['$' + argument] :\r\n        () => gObject[argument]()\r\n    };\r\n    context.$$.dynamic = (value, duration = 200, delay = 0) => {\r\n      gObject.animateTo(\r\n        (isArray(value) ? value : [value]).map(v =>\r\n          isObject(v) && 'offset' in v ?\r\n            {[argument] : v.value, offset : v.offset} :\r\n            {[argument] : v}\r\n        ),\r\n        {duration, delay}\r\n      );\r\n    };\r\n    let value          = evalExpression(expression, context);\r\n    if (argument === 'class') {\r\n      if (isArray(value)) {\r\n        gObject.classList.add(...value.filter(val => !!val));\r\n        return;\r\n      }\r\n      if (isObject(value)) {\r\n        Object.entries(value).forEach(([key, val]) => {\r\n          val ? gObject.classList.add(key) : gObject.classList.remove(key)\r\n        });\r\n        return;\r\n      }\r\n      if (value) {\r\n        gObject.classList.add(value);\r\n      }\r\n      return;\r\n    }\r\n    if (argument === 'style') {\r\n      Object.entries(value).forEach(([key, val]) => gObject.style[key](val));\r\n      return;\r\n    }\r\n    if (!isUndefined(value)) {\r\n      gObject[argument](value);\r\n    }\r\n  }\r\n});\r\n\r\n/**\r\n * g-on: or @\r\n * Directive than allows you to easily run code on dispatched events.\r\n * @example\r\n * <rect g-on:click=\"run\"></rect>\r\n */\r\ndefineDirective({\r\n  name     : 'g-on',\r\n  alias    : '@',\r\n  argument : true,\r\n  execute (gObject, {expression, argument : event, data, evalExpression}) {\r\n    gObject[EVENTS] = gObject[EVENTS] || {};\r\n    const manager   = gObject[EVENTS][event] = gObject[EVENTS][event] || new Map();\r\n    if (manager.has(expression)) {\r\n      gObject.removeEventListener(event, manager.get(expression));\r\n    }\r\n    const handler = function (evt) {\r\n      let fn = evalExpression(expression, data, gObject);\r\n      if (isFunction(fn)) {\r\n        fn.call(gObject, evt);\r\n      }\r\n    };\r\n    gObject.addEventListener(event, handler);\r\n    manager.set(expression, handler);\r\n    if (event === 'init' && !gObject[INIT]) {\r\n      gObject[INIT] = true;\r\n      gObject.dispatchEvent(new Event('init'));\r\n    }\r\n  }\r\n});\r\n\r\n/**\r\n * g-for\r\n * Directive allows you to create elements by iterating through a list. It is only aceptable over\r\n * <defs></defs> element and clones the content for each item into the collection.\r\n * @example\r\n * <defs g-for=\"record of records\">\r\n *   <rect :x=\"record.x\" :y=\"record.y\" :width=\"record.width\" :height=\"record.height\"></rect>\r\n * </defs>\r\n */\r\ndefineDirective({\r\n  name     : 'g-for',\r\n  template : true,\r\n  execute (def, {expression, data}) {\r\n    def[CLONES] = def[CLONES] || [];\r\n    let n       = 0;\r\n    evalForExpression(\r\n      expression,\r\n      data,\r\n      (subData) => {\r\n        if (def[CLONES][n]) {\r\n          process(def[CLONES][n], subData, false);\r\n        } else {\r\n          const g = def.gSVG('g');\r\n          def.children().forEach(child => {\r\n            g.add(child.cloneNode(true));\r\n          });\r\n          process(g, subData);\r\n          def.before(g.el);\r\n          g[CLONED] = true;\r\n          def[CLONES].push(g);\r\n        }\r\n        n++;\r\n      },\r\n      (subData) => {\r\n        while (def[CLONES].length > subData.length) {\r\n          def[CLONES].pop().remove();\r\n        }\r\n      });\r\n  }\r\n});\r\n\r\n\r\n/**\r\n * defineDirective - add a new directive\r\n * @param {Object}   config\r\n * @param {Function} execute\r\n */\r\nfunction defineDirective ({name, alias, argument, template, execute}) {\r\n\r\n  let source  = `^(${\r\n    name\r\n  }${\r\n    argument ? ':' : ''\r\n  }${\r\n    alias ? `|${ alias })` : ')'\r\n  }${\r\n    argument ? `(.*)$` : `$`\r\n  }`\r\n  const check = new RegExp(source, 'i')\r\n\r\n  directives.push({\r\n    name,\r\n    alias,\r\n    argument,\r\n    template,\r\n    execute,\r\n    check\r\n  });\r\n\r\n}\r\n\r\n/**\r\n * findDirective - seeks a defined directive\r\n * @param {string} key\r\n * @returns {Object}\r\n */\r\nfunction findDirective (key) {\r\n  for (const definition of directives) {\r\n    const match = definition.check.exec(key);\r\n    if (match) {\r\n      let argument = match[2];\r\n      return {...definition, argument}\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * getVariables - analyzes a string with destructuring and extract the final variables\r\n * @param {string} expression\r\n * @returns {Array<string>}\r\n */\r\nfunction getVariables (expression) {\r\n  return expression\r\n    .replace(/[{}()[\\]]/g, '')\r\n    .split(',')\r\n    .map(k => k.includes(':') ? k.split(':')[1] : k)\r\n    .map(k => k.trim());\r\n}\r\n\r\n/**\r\n * toIterator - convert a variable into an Array\r\n * @param {any} v\r\n * @returns {{iterator: Array, type: string}}\r\n */\r\nfunction toArray (v) {\r\n  if (v[Symbol.iterator]) {\r\n    return {iterator : [...v], type : ARRAY};\r\n  }\r\n  if (isNumber(v)) {\r\n    return {iterator : Array(v < 0 ? 0 : 0 | v).fill(0).map((v, i) => i), type : NUMBER};\r\n  }\r\n  if (isObject(v)) {\r\n    return {iterator : Object.entries(v).map(m => m.reverse()), type : OBJECT};\r\n  }\r\n  return {iterator : v, type : UNKNOWN};\r\n}\r\n\r\n/**\r\n * evalExpression - evaluate an expression with a data context\r\n * @param {string} code\r\n * @param {object} data\r\n * @param {object} [context=null]\r\n * @returns {*}\r\n */\r\nfunction evalExpression (code, data, context = null) {\r\n  try {\r\n    const keys = Object.keys(data).filter(isValidIdentifier);\r\n    const fn   = createFunction(\r\n      keys,\r\n      `return ( ${ code } ); `\r\n    );\r\n    return fn.apply(context, keys.map(key => data[key]));\r\n  } catch (err) {\r\n    console.warn(LABEL, err.message, '\\n', code);\r\n  }\r\n}\r\n\r\n/**\r\n * evalForExpression - evaluates an expression ` in ` with a data context and calls for each\r\n * occurrence to the callback\r\n * @param {string} code\r\n * @param {object} data\r\n * @param {function} each\r\n * @param {function} final\r\n * @returns {*}\r\n */\r\nfunction evalForExpression (code, data, each, final) {\r\n  const iteratorName = '__$$iterator';\r\n  const callbackName = '__$$callback';\r\n  const finalName    = '__$$final';\r\n  try {\r\n    let [left, right]      = code.split(' of ');\r\n    left                   = left.trim();\r\n    right                  = right.trim();\r\n    const value            = evalExpression(right, data) || [];\r\n    const {iterator, type} = toArray(value);\r\n    if (type === OBJECT && !left.startsWith('[')) {\r\n      left = `[${ left.replace(/(^\\()|(\\)$)/g, '') }]`;\r\n    }\r\n    const variables    = getVariables(left);\r\n    const args         = !left.startsWith('(') ? `(${ left })` : left;\r\n    const dataKeys     = Object.keys(data).filter(isValidIdentifier);\r\n    const codeFunction = `\r\n      ${ iteratorName }.forEach(${ args } => {\r\n        ${ callbackName }({${ dataKeys }${ dataKeys.length ?\r\n      ',' :\r\n      '' }${ variables.join(',') }});\r\n      });\r\n      ${ finalName }(${ iteratorName });\r\n    `;\r\n    const fn           = createFunction([...dataKeys, iteratorName, callbackName, finalName], codeFunction);\r\n    return fn(...dataKeys.map(key => data[key]), iterator, each, final);\r\n  } catch (err) {\r\n    console.warn(LABEL, err);\r\n  }\r\n}\r\n\r\n/**\r\n * process - evaluates a gObject object and renders the content with the directives, creating new\r\n * elements, adding content, filling in attributes, etc.\r\n * @param {Object} el\r\n * @param {Object} data\r\n * @param {boolean} [checkCloned=true]\r\n */\r\nfunction process (el, data, checkCloned = true) {\r\n  if (checkCloned && el[CLONED]) {\r\n    return\r\n  }\r\n  el[TEMPLATE] = el[TEMPLATE] || [];\r\n  const attrs  = el.attributes();\r\n  for (let attr of [...attrs]) {\r\n    const attributeName = attr.name;\r\n    const result        = findDirective(attributeName);\r\n    if (result) {\r\n      el[TEMPLATE].push({...result, expression : attr.value});\r\n      el.removeAttribute(attributeName);\r\n    }\r\n  }\r\n  let template = false;\r\n  for (let directive of el[TEMPLATE]) {\r\n    directive.execute(el, {...directive, data, evalExpression});\r\n    template = directive.template || template;\r\n  }\r\n  if (!template) {\r\n    for (const child of el.children()) {\r\n      process(child, data);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {Object|Array} [context]\r\n */\r\nfunction render (context = {}) {\r\n  process(this, context);\r\n  this.dispatchEvent(new Event('render'));\r\n}\r\n\r\n\r\n/**\r\n * Install template plugin\r\n * @param {object} setup\r\n * @example gSVG.install(templateEngine)\r\n */\r\nexport function svgPlugin (setup) {\r\n\r\n  // Dependencies\r\n  setup.install(animateToPlugin);\r\n  // Install\r\n  setup.extendInstance({\r\n    render\r\n  });\r\n  setup.extendSetup({\r\n    extendTemplate : {\r\n      defineDirective,\r\n      obtainDirective (name) {\r\n        return directives.find(directive => directive.name === name);\r\n      }\r\n    }\r\n  })\r\n}", "import { getProperty }           from \"./objects.js\";\r\nimport { isUndefined, isString } from \"./types.js\";\r\n\r\nconst DIRECT  = Symbol();\r\nconst INITIAL = Symbol();\r\n\r\nfunction getValue (obj, prop) {\r\n  if (prop === DIRECT) {\r\n    return obj;\r\n  }\r\n  return getProperty(obj, prop);\r\n}\r\n\r\n/**\r\n * @typedef operators\r\n * @type {object}\r\n * @property {function} $filter\r\n * @property {function} $map\r\n * @property {function} $min\r\n * @property {function} $max\r\n * @property {function} $sum\r\n * @property {function} $count\r\n * @property {function} $avg\r\n * @property {function} $distinct\r\n */\r\n\r\n/**\r\n *\r\n * @param {Object|Array} [data={}]\r\n * @returns {object}\r\n */\r\nexport function operations (data = {}) {\r\n\r\n  const cache  = {}\r\n\r\n  /**\r\n   *\r\n   * @param {String} name\r\n   * @param {Number|Object|Symbol} init\r\n   * @param {Function} op\r\n   * @param {Function} [finish]\r\n   */\r\n  function operation (name, init, op, finish) {\r\n    if ((name in data)) {\r\n      return;\r\n    }\r\n    if (!cache[name]) {\r\n      cache[name] = {};\r\n    }\r\n    Object.defineProperty(\r\n      data,\r\n      name,\r\n      {\r\n        enumerable   : false,\r\n        configurable : true,\r\n        writable     : true,\r\n        value (arr = undefined, prop = DIRECT) {\r\n          if (isString(arr) || isUndefined(arr)) {\r\n            prop = arr || DIRECT;\r\n            if ((prop in cache[name])) {\r\n              return cache[name][prop];\r\n            }\r\n          } else {\r\n            data = arr;\r\n          }\r\n          let result = data.reduce((result, record) => {\r\n            const value = getValue(record, prop);\r\n            if (typeof value === 'undefined') {\r\n              return result;\r\n            }\r\n            return result === INITIAL ? value : op(result, value);\r\n          }, init);\r\n          result     = typeof finish === 'function' ? finish(result) : result;\r\n          if (data !== arr) {\r\n            cache[name][prop] = result\r\n          }\r\n          return result;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  operation('$min', INITIAL, (result, value) => value > result ? result : value);\r\n  operation('$max', INITIAL, (result, value) => value < result ? result : value);\r\n  operation('$count', 0, (result) => result + 1);\r\n  operation('$sum', 0, (result, value) => value + result);\r\n  operation('$avg', {n : 0, i : 0}, (result, value) => {\r\n    result.n++;\r\n    result.i += Number(value);\r\n    return result;\r\n  }, (result) => result.i / result.n);\r\n  operation('$distinct', new Set(), (result, value) => {\r\n    result.add(value);\r\n    return result;\r\n  }, (result) => [...result]);\r\n\r\n  return data;\r\n}\r\n", "import {\r\n  Base, define,\r\n  RENDER, CONTEXT, FIRE_EVENT, CHANGE\r\n}                              from '../core/base.js';\r\nimport {\r\n  STRING, OBJECT, jsStr2obj, csvStr2obj, isLikeObject, isLikeArray, isFunction, isArray\r\n}                   from '../helpers/types.js';\r\nimport intersection from \"../core/intersection.js\";\r\nimport gSVG         from '../lib/gsvg.js';\r\nimport { svgPlugin as render } from '../plugins/template.engine.js';\r\nimport { debounceMethod }      from \"../helpers/functions.js\";\r\nimport { getFunctions }        from \"../helpers/function.create.js\";\r\nimport { operations }          from \"../helpers/array.operations.js\";\r\nimport { clone }               from \"../helpers/objects.js\";\r\n\r\nconst composerPlugin = (setup) => {\r\n  setup.extendSetup({\r\n    extendComposer (extension) {\r\n      isFunction(extension) ?\r\n        extension(Composer.prototype) :\r\n        Object.assign(Composer.prototype, extension);\r\n    }\r\n  })\r\n};\r\n\r\ngSVG.install(render)\r\n    .install(composerPlugin);\r\n\r\nconst NAME        = 'composer';\r\nconst UPDATE      = 'update';\r\nconst SVG         = 'SVG';\r\nconst queryScript = (kind) => `script[type=${ kind }],g-script[type=${ kind }]`;\r\n\r\n/**\r\n * gy-svg class\r\n * @element gy-svg\r\n */\r\nexport default class Composer extends Base {\r\n\r\n  #svg        = null;\r\n  #loaded     = false;\r\n  isRendering = false;\r\n\r\n  async #fetch (url) {\r\n    const res = await fetch(url)\r\n    if (res.status !== 200) {\r\n      throw new Error(`${ res.statusText } (${ res.status }): ${ res.url }`);\r\n    }\r\n    return res.text();\r\n  }\r\n\r\n  async #loadPlugins () {\r\n    const plugins = [...this.querySelectorAll(queryScript('plugin'))];\r\n    for (let plugin of plugins) {\r\n      const src = plugin.getAttribute('src');\r\n      if (src) {\r\n        gSVG.install((await import(src))?.svgPlugin);\r\n      }\r\n    }\r\n  }\r\n\r\n  async #loadSVG () {\r\n    const ctx             = this [CONTEXT];\r\n    this.#svg             = null;\r\n    ctx.content.innerHTML = '';\r\n\r\n    if (ctx.svgSrc) {\r\n      ctx.content.innerHTML = await this.#fetch(ctx.svgSrc);\r\n    } else {\r\n      const template = this.querySelector('template')?.content || this.querySelector(SVG);\r\n      if (template) {\r\n        ctx.content.append(template.cloneNode(true));\r\n      }\r\n    }\r\n    const svg = ctx.content.querySelector(SVG);\r\n    if (svg) {\r\n      this.#svg = gSVG(svg);\r\n      if (!this.#svg.width() || this.#svg.width()?.baseVal?.value === 0) {\r\n        this.#svg.width('100%');\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async #loadScript (kind) {\r\n    const ctx = this[CONTEXT];\r\n    const key = kind + 'Src';\r\n    const el  = this.querySelector(queryScript(kind));\r\n    if (el) {\r\n      ctx[key] = el.getAttribute('src');\r\n    }\r\n    if (ctx[key]) {\r\n      return this.#fetch(ctx[key]);\r\n    }\r\n    return el?.textContent;\r\n  }\r\n\r\n  async #loadMethods () {\r\n    const content = await this.#loadScript('methods');\r\n    if (content) {\r\n      this [CONTEXT].methods = getFunctions({$ : this}, content);\r\n    }\r\n  }\r\n\r\n  async #loadConfig () {\r\n    const content = await this.#loadScript('config');\r\n    if (content) {\r\n      this [CONTEXT].config = jsStr2obj(content);\r\n    }\r\n  }\r\n\r\n  async #loadData () {\r\n    const content = await this.#loadScript('data');\r\n    if (content) {\r\n      this [CONTEXT].data = isLikeObject(content) || isLikeArray(content) ?\r\n        jsStr2obj(content) :\r\n        csvStr2obj(content);\r\n    }\r\n  }\r\n\r\n  constructor () {\r\n    super();\r\n    const ctx                 = this [CONTEXT];\r\n    // language=HTML\r\n    this.shadowRoot.innerHTML = `\r\n      <style>\r\n        :host {\r\n          display : inline-block;\r\n          width   : max-content;\r\n          height  : max-content;\r\n        }\r\n      </style>\r\n      <span id=\"content\"></span>\r\n    `;\r\n    ctx.content               = this.shadowRoot.querySelector('#content');\r\n  }\r\n\r\n  /**\r\n   * Render method\r\n   * @private\r\n   */\r\n  [RENDER] () {\r\n    return this.load();\r\n  }\r\n\r\n  async [CHANGE] (mutations) {\r\n    const promises = [];\r\n    try {\r\n      for (let mutation of mutations) {\r\n        const target = mutation.target;\r\n        if (target === this && !mutation.attributeName) {\r\n          return this.load();\r\n        }\r\n        if (target.tagName === SVG) {\r\n          promises.push(this.#loadSVG());\r\n        } else if (target.tagName === 'SCRIPT') {\r\n          const load = {\r\n            data    : this.#loadData,\r\n            methods : this.#loadMethods,\r\n            config  : this.#loadConfig\r\n          }[target.type.toLowerCase()];\r\n          if (load) {\r\n            promises.push(load());\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      this[FIRE_EVENT]('error', err.message);\r\n      return false;\r\n    }\r\n    if (promises.length) {\r\n      await Promise.all(promises);\r\n      return this.update();\r\n    }\r\n  }\r\n\r\n  async load () {\r\n    try {\r\n\r\n      this.#loaded = false;\r\n\r\n      // Plugins\r\n      await this.#loadPlugins();\r\n\r\n      await Promise.all([\r\n        // SVG\r\n        this.#loadSVG(),\r\n        // Config\r\n        this.#loadConfig(),\r\n        // Methods\r\n        this.#loadMethods(),\r\n        // Data\r\n        this.#loadData()\r\n      ]);\r\n\r\n      this.#loaded = true;\r\n\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      this[FIRE_EVENT]('error', err.message);\r\n      return false;\r\n    }\r\n\r\n    // Call to update\r\n    return this.update(true);\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {boolean} [forced=false]\r\n   * @returns {Promise<void>}\r\n   */\r\n  async update (forced = false) {\r\n    if (this.isRendering && !forced) {\r\n      return;\r\n    }\r\n    if (this.#svg) {\r\n      this.isRendering = true;\r\n      const ctx        = this [CONTEXT];\r\n      const data       = operations(\r\n        ctx.methods.data ?\r\n          ctx.methods.data(clone(ctx.data)) :\r\n          clone(ctx.data)\r\n      );\r\n      const renderCtx  = {\r\n        ...ctx.methods,\r\n        ...(isArray(data) ? {} : data),\r\n        data,\r\n        $ : this\r\n      };\r\n      await this.#svg.render(renderCtx);\r\n      this.isRendering = false;\r\n    }\r\n  }\r\n\r\n  get svg () {\r\n    return this.#svg;\r\n  }\r\n\r\n  get loaded () {\r\n    return this.#loaded;\r\n  }\r\n\r\n}\r\n\r\nComposer.prototype.update = debounceMethod(Composer.prototype.update, 1)\r\n\r\n// Define the component\r\ndefine(Composer)\r\n  .extension(intersection)\r\n  .attribute({name : 'svg-src', type : STRING, value : '', posUpdate : RENDER})\r\n  .attribute({name : 'data', type : OBJECT, value : [], posUpdate : UPDATE})\r\n  .attribute({name : 'data-src', type : STRING, posUpdate : RENDER})\r\n  .property({name : 'methods', type : OBJECT, value : {}, posUpdate : UPDATE})\r\n  .attribute({name : 'methods-src', type : STRING, posUpdate : RENDER})\r\n  .attribute({name : 'config', type : OBJECT, value : {}, posUpdate : UPDATE})\r\n  .attribute({name : 'config-src', type : STRING, posUpdate : RENDER})\r\n  .tag(NAME);\r\n"],
  "mappings": "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",
  "names": ["FUNCTION", "UNDEFINED", "OBJECT", "STRING", "ARRAY", "NUMBER", "BOOLEAN", "DATE", "SYMBOL", "EMPTY_STRING", "COMA", "SEMICOLON", "isObject", "v", "OBJECT", "isString", "STRING", "isFunction", "FUNCTION", "isNumber", "NUMBER", "isUndefined", "UNDEFINED", "isSymbol", "SYMBOL", "isBoolean", "BOOLEAN", "isArray", "isDate", "isNull", "toCamel", "name", "x", "y", "attribute2object", "value", "isString", "normalized", "partial", "str2value", "err", "isObject", "attribute2array", "arr", "str", "isArray", "str2value", "str", "type", "quote", "isString", "removeDoubleQuote", "ARRAY", "attribute2array", "OBJECT", "attribute2object", "isUndefined", "NUMBER", "value", "BOOLEAN", "DATE", "STRING", "isLikeObject", "isLikeArray", "csvStr2obj", "keys", "r", "result", "row", "idx", "obj", "parts", "partial", "EMPTY_STRING", "SEMICOLON", "COMA", "x", "part", "i", "jsStr2obj", "code", "ret", "cache", "ignore", "objectObserver", "object", "callback", "isFunction", "observe", "obj", "prop", "isObject", "isNull", "result", "target", "value", "isDate", "isString", "args", "ret", "same", "object_observer_default", "NOT_EQUAL", "EQUAL", "createOther", "obj", "clone", "isObject", "copy", "p", "equal", "objectA", "objectB", "aStack", "bStack", "checkObject", "a", "b", "isFunction", "aKeys", "bKeys", "i", "key", "check", "aType", "NUMBER", "OBJECT", "getProperty", "path", "tmp", "elements", "isString", "isUndefined", "COMPONENT_PREFIX", "INITIALIZERS", "CONTEXT", "CHANGE", "FIRE_EVENT", "defProp", "updateAttribute", "element", "attribute", "value", "asBoolean", "EMPTY_STRING", "valueNormalized", "isNull", "isUndefined", "initValues", "target", "proto", "init", "initialValues", "p", "tmp", "clone", "observeMutation", "mutations", "mutation", "isFunction", "Simple", "fn", "event", "detail", "composed", "defineAttribute", "Class", "toCamel", "defineProperty", "prototype", "OBSERVE_ATTRIBUTES", "descriptorObsAttr", "descriptorObsAttrPrototype", "previousGet", "descriptorObservedAttributes", "ATTRIBUTE_CHANGED_CALLBACK", "descriptorAttrChgCbk", "descriptorAttrChgCbkPrototype", "previousFunction", "defineAttributeDescriptor", "name", "oldValue", "propertyName", "BOOLEAN", "str2value", "descriptor", "property", "definePropertySet", "definePropertyGet", "pos", "ctx", "object_observer_default", "isObject", "equal", "isString", "ARRAY", "OBJECT", "NUMBER", "obj", "registreComponent", "define", "def", "properties", "attributes", "debounceMethod", "fn", "wait", "prev", "args", "debounceMethodAsync", "instances", "promises", "resolve", "reject", "res", "p", "err", "preCondition", "condition", "fn", "args", "posExecution", "pos", "result", "res", "DELAY", "REFRESH", "RENDER", "RESIZE", "CSS_PROPS", "Base", "Simple", "ready", "CONTEXT", "isUndefined", "value", "ctx", "pre", "FIRE_EVENT", "isFunction", "RENDER", "reference", "flexDirection", "resize", "currentWidth", "currentHeight", "currentFlexDirection", "RESIZE", "defineStyleProperty", "Class", "def", "definition", "COMPONENT_PREFIX", "CSS_PROPS", "defineComponent", "preRender", "preCondition", "debounceMethodAsync", "posExecution", "result", "REFRESH", "DELAY", "prevRefresh", "force", "args", "define", "styles", "style", "CHANGE", "EVENT_IN", "EVENT_OUT", "OBSERVER", "options", "x", "y", "intersection", "ratio", "intersected", "entries", "entry", "intersection_default", "intersectionCoreExtension", "defineObject", "STRING", "NUMBER", "observer", "add", "classList", "classes", "cl", "remove", "ctx", "CONTEXT", "intersection_default", "NAME", "NS", "SVG", "D", "TRANSFORM", "APPEND_CHILD", "INSERT_BEFORE", "INSERT_ADJACENT_ELEMENT", "ATTACH", "INNER_HTML", "cache", "readonlyProp", "directAccess", "prop", "isSymbol", "is", "o", "p", "randomId", "isWrapped", "el", "isObject", "isNull", "create", "tag", "wrapper", "createWrap", "isString", "alias", "appendMethods", "method", "params", "a", "b", "c", "GSVGObject", "element", "gSVG", "value", "result", "proxy", "wrapped", "isUndefined", "args", "preCall", "content", "processor", "pathD", "elTransform", "dProxy", "arg", "_target", "command", "ret", "altProp", "fn", "isFunction", "adaptedResult", "methodWrapper", "parentWrapper", "parentProp", "propNormalized", "f", "previousValue", "isBoolean", "prop2", "value2", "x", "registeredCalls", "extensions", "call", "registeredPathD", "k", "COMA", "EMPTY_STRING", "Extensor", "obj", "extension", "setup", "install", "callback", "plugin", "gsvg_default", "cache", "functionName", "AsyncFunction", "createFunction", "args", "code", "async", "key", "fn", "getFunctions", "globals", "names", "x", "n", "err", "isValidIdentifier", "identifier", "SVG", "ANIMATE", "FILL", "FREEZE", "PATH", "D", "TRANSFORM", "ROTATE", "TRANSLATE", "OFFSET", "INHERIT", "FINISHED", "DEG_TYPES", "DEG", "PX", "MS", "TO_PIXELS", "reduceMotion", "mediaQuery", "toHyphen", "name", "animateTo", "keyframes", "options", "startCallback", "endCallback", "gSVG", "normalizeOptions", "opts", "normalizedConfig", "isObject", "normalizeKeyframes", "originalKeyframes", "isArray", "computedStyle", "normalizeFrames", "alternativeKeys", "keyframe", "normalized", "rawKey", "key", "toCamel", "transform", "addAlternatives", "alternatives", "keys", "computedFrames", "initialTime", "altAnimate", "config", "keyTimes", "values", "n", "frame", "property", "isString", "result", "transformValue", "transformUnit", "v", "value", "type", "value2attribute", "d2attribute", "d", "transform2attribute", "regex", "match", "frames", "animation", "isFunction", "lastAttributes", "attr", "attrKey", "animates", "finished", "a", "svgPlugin", "setup", "INIT", "CLONED", "CLONES", "TEMPLATE", "EVENTS", "UNKNOWN", "LABEL", "directives", "defineDirective", "gObject", "expression", "data", "evalExpression", "argument", "context", "value", "duration", "delay", "isArray", "v", "isObject", "val", "key", "isUndefined", "event", "manager", "handler", "evt", "fn", "isFunction", "def", "n", "evalForExpression", "subData", "process", "g", "child", "name", "alias", "template", "execute", "source", "check", "findDirective", "definition", "match", "getVariables", "k", "toArray", "ARRAY", "isNumber", "i", "NUMBER", "m", "OBJECT", "code", "keys", "isValidIdentifier", "createFunction", "err", "each", "final", "iteratorName", "callbackName", "finalName", "left", "right", "iterator", "type", "variables", "args", "dataKeys", "codeFunction", "el", "checkCloned", "attrs", "attr", "attributeName", "result", "directive", "render", "svgPlugin", "setup", "DIRECT", "INITIAL", "getValue", "obj", "prop", "getProperty", "operations", "data", "cache", "operation", "name", "init", "op", "finish", "arr", "isString", "isUndefined", "result", "record", "value", "composerPlugin", "setup", "extension", "isFunction", "Composer", "gsvg_default", "svgPlugin", "NAME", "UPDATE", "SVG", "queryScript", "kind", "Base", "#svg", "#loaded", "#fetch", "url", "res", "#loadPlugins", "plugins", "plugin", "src", "#loadSVG", "ctx", "CONTEXT", "template", "svg", "#loadScript", "key", "el", "#loadMethods", "content", "getFunctions", "#loadConfig", "jsStr2obj", "#loadData", "isLikeObject", "isLikeArray", "csvStr2obj", "RENDER", "CHANGE", "mutations", "promises", "mutation", "target", "load", "err", "FIRE_EVENT", "forced", "data", "operations", "clone", "renderCtx", "isArray", "debounceMethod", "define", "intersection_default", "STRING", "OBJECT"]
}

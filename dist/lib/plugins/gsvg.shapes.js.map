{
  "version": 3,
  "sources": ["../../../src/lib/plugins/gsvg.shapes.js", "../../../src/lib/plugins/gsvg.shapes.script.js"],
  "sourcesContent": ["/**\r\n * Convert an angle from degrees to radians\r\n * @param {number} degrees\r\n * @returns {number}\r\n */\r\nfunction degrees2radians (degrees) {\r\n  return ((degrees - 90) * Math.PI) / 180.0;\r\n}\r\n\r\n/**\r\n * Return an x, y coordinates from an angular reference\r\n * @param {number} centerX\r\n * @param {number} centerY\r\n * @param {number} radius\r\n * @param {number} angleDegrees\r\n * @returns {{x : *, y : *}}\r\n */\r\nfunction polar2cartesian (centerX, centerY, radius, angleDegrees) {\r\n  const angleRadians = degrees2radians(angleDegrees);\r\n  return {\r\n    x : centerX + radius * Math.cos(angleRadians),\r\n    y : centerY + radius * Math.sin(angleRadians)\r\n  };\r\n}\r\n\r\n/**\r\n * Create an arc path\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} radius\r\n * @param {number} startAngle\r\n * @param {number} endAngle\r\n * @return {string}\r\n */\r\nfunction arc (x, y, radius, startAngle, endAngle) {\r\n  const start        = polar2cartesian(x, y, radius, endAngle);\r\n  const end          = polar2cartesian(x, y, radius, startAngle);\r\n  const largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\r\n  return `M${ start.x },${ start.y }A${ radius },${ radius },0,${ largeArcFlag },0,${ end.x },${ end.y }`;\r\n}\r\n\r\n/**\r\n * Create an arched bar shape with a path\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} radius\r\n * @param {number} width\r\n * @param {number} startAngle\r\n * @param {number} endAngle\r\n * @returns {string}\r\n */\r\nfunction barArc (x, y, radius, width, startAngle, endAngle) {\r\n  const externalStart = polar2cartesian(x, y, radius, endAngle);\r\n  const externalEnd   = polar2cartesian(x, y, radius, startAngle);\r\n  const internalStart = polar2cartesian(x, y, radius - width, startAngle);\r\n  const internalEnd   = polar2cartesian(x, y, radius - width, endAngle);\r\n  const flag          = endAngle - startAngle <= 180 ? '0' : '1';\r\n  return `M${ externalStart.x },${ externalStart.y }` +\r\n         `A${ radius },${ radius },0,${ flag },0,${ externalEnd.x },${ externalEnd.y }` +\r\n         `L${ internalStart.x },${ internalStart.y }` +\r\n         `A${ radius - width },${ radius - width },0,${ flag },1,${ internalEnd.x },${ internalEnd.y }` +\r\n         `Z`;\r\n}\r\n\r\n/**\r\n * create a regular polygon shape with a path (no with a svg polygon)\r\n * @param {number} cx    - center x\r\n * @param {number} cy    - center y\r\n * @param {number} r     - radius\r\n * @param {number} n     - sides\r\n * @param {number} [a=0] - initial angle\r\n */\r\nfunction regularPolygon (cx, cy, r, n, a = 0) {\r\n  const angle = 360 / n;\r\n  let path    = '';\r\n  for (let i = 0; i < n; i++) {\r\n    const coords = polar2cartesian(cx, cy, r, (angle * i) + a);\r\n    path += `${ i ? 'L' : 'M' }${ coords.x },${ coords.y }`;\r\n  }\r\n  path += 'Z';\r\n  return path;\r\n}\r\n\r\n\r\n/**\r\n * create a star shape with a path (no with a svg polygon)\r\n * @param {number} cx    - center x\r\n * @param {number} cy    - center y\r\n * @param {number} r1    - external radius\r\n * @param {number} r2    - internal radius\r\n * @param {number} n     - sides\r\n * @param {number} [a=0] - initial angle\r\n */\r\nfunction star (cx, cy, r1, r2, n, a = 0) {\r\n  const angle = 360 / n;\r\n  let path    = '';\r\n  for (let i = 0; i < n; i++) {\r\n    const external = polar2cartesian(cx, cy, r1, (angle * i) + a);\r\n    path += `${ i ? 'L' : 'M' }${ external.x },${ external.y }`;\r\n    const internal = polar2cartesian(cx, cy, r2, (angle * i) + a + (angle / 2));\r\n    path += `L${ internal.x },${ internal.y }`;\r\n  }\r\n  path += 'Z';\r\n  return path;\r\n}\r\n\r\n/**\r\n * create a circle shape with a path (no with a svg circle)\r\n * @param {number} cx    - center x\r\n * @param {number} cy    - center y\r\n * @param {number} r     - radius\r\n */\r\nfunction circle (cx, cy, r) {\r\n  return `M${ cx - r },${ cy }a${ r },${ r },0,1,0,${ r * 2 },0a${ r },${ r },0,1,0,-${ r * 2 },0`;\r\n}\r\n\r\nexport default function shapesPlugin (setup) {\r\n\r\n  setup.extendConstructor({\r\n    polar2cartesian,\r\n    degrees2radians\r\n  });\r\n\r\n  setup.extendPath({\r\n    arc,\r\n    barArc,\r\n    regularPolygon,\r\n    star,\r\n    circle\r\n  });\r\n}", "import plugin from './gsvg.shapes.js';\r\nif (gSVG) {\r\n  gSVG.install(plugin);\r\n}\r\n"],
  "mappings": "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",
  "names": ["degrees2radians", "degrees", "polar2cartesian", "centerX", "centerY", "radius", "angleDegrees", "angleRadians", "arc", "x", "y", "startAngle", "endAngle", "start", "end", "largeArcFlag", "barArc", "width", "externalStart", "externalEnd", "internalStart", "internalEnd", "flag", "regularPolygon", "cx", "cy", "r", "n", "a", "angle", "path", "i", "coords", "star", "r1", "r2", "external", "internal", "circle", "shapesPlugin", "setup", "shapesPlugin"]
}
